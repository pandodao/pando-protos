// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: pool/v1/pool.proto

package pool

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventError_Enum int32

const (
	EventError_NOT_SET EventError_Enum = 0
	// buy / redeem / admin_expand / admin_merge_expansion
	EventError_EARNING_PRODUCT_STATUS_MISMATCH EventError_Enum = 1
	// buy / admin_interest_payment
	EventError_EARNING_PRODUCT_ASSET_MISMATCH EventError_Enum = 2
	// buy
	EventError_EARNING_PRODUCT_MIN_PER_ORDER_UNSATISFIED EventError_Enum = 3
	// buy
	EventError_EARNING_PRODUCT_MAX_PER_ORDER_UNSATISFIED EventError_Enum = 4
	// buy
	EventError_EARNING_PRODUCT_INSUFFICIENT EventError_Enum = 5
	// redeem
	EventError_USER_EARNING_PRODUCT_SHARE_INSUFFICIENT EventError_Enum = 6
	// cancel_queue
	EventError_EARNING_EVENT_MISMATCH EventError_Enum = 7
	// buy or redeem
	EventError_USER_EARNING_PRODUCT_HAS_REVERSED_QUEUING_EVENT EventError_Enum = 8
	// admin_interest_payment
	EventError_EARNING_PRODUCT_NOT_FOUND EventError_Enum = 9
	// admin_interest_payment
	EventError_USER_EARNING_PRODUCT_EOD_NOT_FOUND EventError_Enum = 10
	// redeem
	EventError_USER_EARNING_PRODUCT_HAS_BEEN_PLEDGED EventError_Enum = 11
	// admin_interest_payment
	EventError_EOD_ALREADY_APPLIED EventError_Enum = 12
	// admin_audit_approve / admin_audit_reject
	EventError_AUDIT_NOT_FOUND EventError_Enum = 13
	// admin_audit_approve / admin_audit_reject
	EventError_AUDIT_STATUS_MISMATCH EventError_Enum = 14
	// buy / redeem
	EventError_EARNING_PRODUCT_PRECISION_UNSATISFIED EventError_Enum = 15
	// buy
	EventError_USER_NOT_IN_WHITELIST EventError_Enum = 16
)

// Enum value maps for EventError_Enum.
var (
	EventError_Enum_name = map[int32]string{
		0:  "NOT_SET",
		1:  "EARNING_PRODUCT_STATUS_MISMATCH",
		2:  "EARNING_PRODUCT_ASSET_MISMATCH",
		3:  "EARNING_PRODUCT_MIN_PER_ORDER_UNSATISFIED",
		4:  "EARNING_PRODUCT_MAX_PER_ORDER_UNSATISFIED",
		5:  "EARNING_PRODUCT_INSUFFICIENT",
		6:  "USER_EARNING_PRODUCT_SHARE_INSUFFICIENT",
		7:  "EARNING_EVENT_MISMATCH",
		8:  "USER_EARNING_PRODUCT_HAS_REVERSED_QUEUING_EVENT",
		9:  "EARNING_PRODUCT_NOT_FOUND",
		10: "USER_EARNING_PRODUCT_EOD_NOT_FOUND",
		11: "USER_EARNING_PRODUCT_HAS_BEEN_PLEDGED",
		12: "EOD_ALREADY_APPLIED",
		13: "AUDIT_NOT_FOUND",
		14: "AUDIT_STATUS_MISMATCH",
		15: "EARNING_PRODUCT_PRECISION_UNSATISFIED",
		16: "USER_NOT_IN_WHITELIST",
	}
	EventError_Enum_value = map[string]int32{
		"NOT_SET":                                         0,
		"EARNING_PRODUCT_STATUS_MISMATCH":                 1,
		"EARNING_PRODUCT_ASSET_MISMATCH":                  2,
		"EARNING_PRODUCT_MIN_PER_ORDER_UNSATISFIED":       3,
		"EARNING_PRODUCT_MAX_PER_ORDER_UNSATISFIED":       4,
		"EARNING_PRODUCT_INSUFFICIENT":                    5,
		"USER_EARNING_PRODUCT_SHARE_INSUFFICIENT":         6,
		"EARNING_EVENT_MISMATCH":                          7,
		"USER_EARNING_PRODUCT_HAS_REVERSED_QUEUING_EVENT": 8,
		"EARNING_PRODUCT_NOT_FOUND":                       9,
		"USER_EARNING_PRODUCT_EOD_NOT_FOUND":              10,
		"USER_EARNING_PRODUCT_HAS_BEEN_PLEDGED":           11,
		"EOD_ALREADY_APPLIED":                             12,
		"AUDIT_NOT_FOUND":                                 13,
		"AUDIT_STATUS_MISMATCH":                           14,
		"EARNING_PRODUCT_PRECISION_UNSATISFIED":           15,
		"USER_NOT_IN_WHITELIST":                           16,
	}
)

func (x EventError_Enum) Enum() *EventError_Enum {
	p := new(EventError_Enum)
	*p = x
	return p
}

func (x EventError_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventError_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[0].Descriptor()
}

func (EventError_Enum) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[0]
}

func (x EventError_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventError_Enum.Descriptor instead.
func (EventError_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{0, 0}
}

type EventAction_Enum int32

const (
	EventAction_NOT_SET                            EventAction_Enum = 0
	EventAction_BUY                                EventAction_Enum = 1
	EventAction_REDEEM                             EventAction_Enum = 2
	EventAction_DEPOSIT                            EventAction_Enum = 3
	EventAction_INTEREST_PAYMENT                   EventAction_Enum = 4
	EventAction_CANCEL_QUEUE                       EventAction_Enum = 5
	EventAction_MIXIN_MIGRATE                      EventAction_Enum = 6
	EventAction_ADMIN_INTEREST_PAYMENT             EventAction_Enum = 100
	EventAction_ADMIN_PRODUCT_EXPAND               EventAction_Enum = 101
	EventAction_ADMIN_PRODUCT_MERGE_EXPANSION      EventAction_Enum = 102
	EventAction_ADMIN_PLEDGE                       EventAction_Enum = 103
	EventAction_ADMIN_CANCEL_PLEDGE                EventAction_Enum = 104
	EventAction_ADMIN_LEGACY_ASSET_MIGRATION       EventAction_Enum = 105
	EventAction_ADMIN_AUDIT_APPROVE                EventAction_Enum = 106
	EventAction_ADMIN_AUDIT_REJECT                 EventAction_Enum = 107
	EventAction_ADMIN_AUTO_REVISE_PRODUCT_CAPACITY EventAction_Enum = 108
)

// Enum value maps for EventAction_Enum.
var (
	EventAction_Enum_name = map[int32]string{
		0:   "NOT_SET",
		1:   "BUY",
		2:   "REDEEM",
		3:   "DEPOSIT",
		4:   "INTEREST_PAYMENT",
		5:   "CANCEL_QUEUE",
		6:   "MIXIN_MIGRATE",
		100: "ADMIN_INTEREST_PAYMENT",
		101: "ADMIN_PRODUCT_EXPAND",
		102: "ADMIN_PRODUCT_MERGE_EXPANSION",
		103: "ADMIN_PLEDGE",
		104: "ADMIN_CANCEL_PLEDGE",
		105: "ADMIN_LEGACY_ASSET_MIGRATION",
		106: "ADMIN_AUDIT_APPROVE",
		107: "ADMIN_AUDIT_REJECT",
		108: "ADMIN_AUTO_REVISE_PRODUCT_CAPACITY",
	}
	EventAction_Enum_value = map[string]int32{
		"NOT_SET":                            0,
		"BUY":                                1,
		"REDEEM":                             2,
		"DEPOSIT":                            3,
		"INTEREST_PAYMENT":                   4,
		"CANCEL_QUEUE":                       5,
		"MIXIN_MIGRATE":                      6,
		"ADMIN_INTEREST_PAYMENT":             100,
		"ADMIN_PRODUCT_EXPAND":               101,
		"ADMIN_PRODUCT_MERGE_EXPANSION":      102,
		"ADMIN_PLEDGE":                       103,
		"ADMIN_CANCEL_PLEDGE":                104,
		"ADMIN_LEGACY_ASSET_MIGRATION":       105,
		"ADMIN_AUDIT_APPROVE":                106,
		"ADMIN_AUDIT_REJECT":                 107,
		"ADMIN_AUTO_REVISE_PRODUCT_CAPACITY": 108,
	}
)

func (x EventAction_Enum) Enum() *EventAction_Enum {
	p := new(EventAction_Enum)
	*p = x
	return p
}

func (x EventAction_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventAction_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[1].Descriptor()
}

func (EventAction_Enum) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[1]
}

func (x EventAction_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventAction_Enum.Descriptor instead.
func (EventAction_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{1, 0}
}

type EventStatus_Enum int32

const (
	EventStatus_NOT_SET   EventStatus_Enum = 0
	EventStatus_INIT      EventStatus_Enum = 1
	EventStatus_PENDING   EventStatus_Enum = 2
	EventStatus_QUEUING   EventStatus_Enum = 3
	EventStatus_CANCELLED EventStatus_Enum = 4
	EventStatus_COMPLETED EventStatus_Enum = 5
	EventStatus_FAILED    EventStatus_Enum = 6
)

// Enum value maps for EventStatus_Enum.
var (
	EventStatus_Enum_name = map[int32]string{
		0: "NOT_SET",
		1: "INIT",
		2: "PENDING",
		3: "QUEUING",
		4: "CANCELLED",
		5: "COMPLETED",
		6: "FAILED",
	}
	EventStatus_Enum_value = map[string]int32{
		"NOT_SET":   0,
		"INIT":      1,
		"PENDING":   2,
		"QUEUING":   3,
		"CANCELLED": 4,
		"COMPLETED": 5,
		"FAILED":    6,
	}
)

func (x EventStatus_Enum) Enum() *EventStatus_Enum {
	p := new(EventStatus_Enum)
	*p = x
	return p
}

func (x EventStatus_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStatus_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[2].Descriptor()
}

func (EventStatus_Enum) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[2]
}

func (x EventStatus_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStatus_Enum.Descriptor instead.
func (EventStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{2, 0}
}

type EarningProductStatus_Enum int32

const (
	EarningProductStatus_NOT_SET     EarningProductStatus_Enum = 0
	EarningProductStatus_RECRUITING  EarningProductStatus_Enum = 1
	EarningProductStatus_RUNNING     EarningProductStatus_Enum = 2
	EarningProductStatus_EXPANDING   EarningProductStatus_Enum = 3
	EarningProductStatus_DEACTIVATED EarningProductStatus_Enum = 4
)

// Enum value maps for EarningProductStatus_Enum.
var (
	EarningProductStatus_Enum_name = map[int32]string{
		0: "NOT_SET",
		1: "RECRUITING",
		2: "RUNNING",
		3: "EXPANDING",
		4: "DEACTIVATED",
	}
	EarningProductStatus_Enum_value = map[string]int32{
		"NOT_SET":     0,
		"RECRUITING":  1,
		"RUNNING":     2,
		"EXPANDING":   3,
		"DEACTIVATED": 4,
	}
)

func (x EarningProductStatus_Enum) Enum() *EarningProductStatus_Enum {
	p := new(EarningProductStatus_Enum)
	*p = x
	return p
}

func (x EarningProductStatus_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EarningProductStatus_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[3].Descriptor()
}

func (EarningProductStatus_Enum) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[3]
}

func (x EarningProductStatus_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EarningProductStatus_Enum.Descriptor instead.
func (EarningProductStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{3, 0}
}

type EarningProductType_Enum int32

const (
	EarningProductType_NOT_SET EarningProductType_Enum = 0
	EarningProductType_STAKING EarningProductType_Enum = 1
	EarningProductType_SAVINGS EarningProductType_Enum = 2
)

// Enum value maps for EarningProductType_Enum.
var (
	EarningProductType_Enum_name = map[int32]string{
		0: "NOT_SET",
		1: "STAKING",
		2: "SAVINGS",
	}
	EarningProductType_Enum_value = map[string]int32{
		"NOT_SET": 0,
		"STAKING": 1,
		"SAVINGS": 2,
	}
)

func (x EarningProductType_Enum) Enum() *EarningProductType_Enum {
	p := new(EarningProductType_Enum)
	*p = x
	return p
}

func (x EarningProductType_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EarningProductType_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[4].Descriptor()
}

func (EarningProductType_Enum) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[4]
}

func (x EarningProductType_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EarningProductType_Enum.Descriptor instead.
func (EarningProductType_Enum) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{4, 0}
}

type Audit_Status int32

const (
	Audit_NOT_SET  Audit_Status = 0
	Audit_REJECTED Audit_Status = 1
	Audit_APPROVED Audit_Status = 2
)

// Enum value maps for Audit_Status.
var (
	Audit_Status_name = map[int32]string{
		0: "NOT_SET",
		1: "REJECTED",
		2: "APPROVED",
	}
	Audit_Status_value = map[string]int32{
		"NOT_SET":  0,
		"REJECTED": 1,
		"APPROVED": 2,
	}
)

func (x Audit_Status) Enum() *Audit_Status {
	p := new(Audit_Status)
	*p = x
	return p
}

func (x Audit_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_v1_pool_proto_enumTypes[5].Descriptor()
}

func (Audit_Status) Type() protoreflect.EnumType {
	return &file_pool_v1_pool_proto_enumTypes[5]
}

func (x Audit_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audit_Status.Descriptor instead.
func (Audit_Status) EnumDescriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{35, 0}
}

type EventError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventError) Reset() {
	*x = EventError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventError) ProtoMessage() {}

func (x *EventError) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventError.ProtoReflect.Descriptor instead.
func (*EventError) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{0}
}

type EventAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventAction) Reset() {
	*x = EventAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAction) ProtoMessage() {}

func (x *EventAction) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAction.ProtoReflect.Descriptor instead.
func (*EventAction) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{1}
}

type EventStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventStatus) Reset() {
	*x = EventStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatus) ProtoMessage() {}

func (x *EventStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatus.ProtoReflect.Descriptor instead.
func (*EventStatus) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{2}
}

type EarningProductStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EarningProductStatus) Reset() {
	*x = EarningProductStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningProductStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningProductStatus) ProtoMessage() {}

func (x *EarningProductStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningProductStatus.ProtoReflect.Descriptor instead.
func (*EarningProductStatus) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{3}
}

type EarningProductType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EarningProductType) Reset() {
	*x = EarningProductType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningProductType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningProductType) ProtoMessage() {}

func (x *EarningProductType) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningProductType.ProtoReflect.Descriptor instead.
func (*EarningProductType) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{4}
}

type EarningSnapshotBuyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     int32                     `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductStatus EarningProductStatus_Enum `protobuf:"varint,2,opt,name=product_status,json=productStatus,proto3,enum=pool.v1.EarningProductStatus_Enum" json:"product_status,omitempty"`
}

func (x *EarningSnapshotBuyData) Reset() {
	*x = EarningSnapshotBuyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotBuyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotBuyData) ProtoMessage() {}

func (x *EarningSnapshotBuyData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotBuyData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotBuyData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{5}
}

func (x *EarningSnapshotBuyData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *EarningSnapshotBuyData) GetProductStatus() EarningProductStatus_Enum {
	if x != nil {
		return x.ProductStatus
	}
	return EarningProductStatus_NOT_SET
}

type EarningSnapshotRedeemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId     int32                     `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Amount        int64                     `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ProductStatus EarningProductStatus_Enum `protobuf:"varint,3,opt,name=product_status,json=productStatus,proto3,enum=pool.v1.EarningProductStatus_Enum" json:"product_status,omitempty"`
}

func (x *EarningSnapshotRedeemData) Reset() {
	*x = EarningSnapshotRedeemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotRedeemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotRedeemData) ProtoMessage() {}

func (x *EarningSnapshotRedeemData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotRedeemData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotRedeemData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{6}
}

func (x *EarningSnapshotRedeemData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *EarningSnapshotRedeemData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *EarningSnapshotRedeemData) GetProductStatus() EarningProductStatus_Enum {
	if x != nil {
		return x.ProductStatus
	}
	return EarningProductStatus_NOT_SET
}

type EarningSnapshotCancelQueueData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *EarningSnapshotCancelQueueData) Reset() {
	*x = EarningSnapshotCancelQueueData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotCancelQueueData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotCancelQueueData) ProtoMessage() {}

func (x *EarningSnapshotCancelQueueData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotCancelQueueData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotCancelQueueData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{7}
}

func (x *EarningSnapshotCancelQueueData) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type EarningSnapshotAdminInterestPaymentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId   int32                   `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductType EarningProductType_Enum `protobuf:"varint,2,opt,name=product_type,json=productType,proto3,enum=pool.v1.EarningProductType_Enum" json:"product_type,omitempty"`
	Date        string                  `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"` // format: 2008-01-02
}

func (x *EarningSnapshotAdminInterestPaymentData) Reset() {
	*x = EarningSnapshotAdminInterestPaymentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminInterestPaymentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminInterestPaymentData) ProtoMessage() {}

func (x *EarningSnapshotAdminInterestPaymentData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminInterestPaymentData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminInterestPaymentData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{8}
}

func (x *EarningSnapshotAdminInterestPaymentData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *EarningSnapshotAdminInterestPaymentData) GetProductType() EarningProductType_Enum {
	if x != nil {
		return x.ProductType
	}
	return EarningProductType_NOT_SET
}

func (x *EarningSnapshotAdminInterestPaymentData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type EarningSnapshotAdminProductExpandData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Amount    int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *EarningSnapshotAdminProductExpandData) Reset() {
	*x = EarningSnapshotAdminProductExpandData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminProductExpandData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminProductExpandData) ProtoMessage() {}

func (x *EarningSnapshotAdminProductExpandData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminProductExpandData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminProductExpandData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{9}
}

func (x *EarningSnapshotAdminProductExpandData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *EarningSnapshotAdminProductExpandData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EarningSnapshotAdminProductMergeExpansionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *EarningSnapshotAdminProductMergeExpansionData) Reset() {
	*x = EarningSnapshotAdminProductMergeExpansionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminProductMergeExpansionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminProductMergeExpansionData) ProtoMessage() {}

func (x *EarningSnapshotAdminProductMergeExpansionData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminProductMergeExpansionData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminProductMergeExpansionData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{10}
}

func (x *EarningSnapshotAdminProductMergeExpansionData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type EarningSnapshotAdminPledgeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EarningSnapshotAdminPledgeData) Reset() {
	*x = EarningSnapshotAdminPledgeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminPledgeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminPledgeData) ProtoMessage() {}

func (x *EarningSnapshotAdminPledgeData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminPledgeData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminPledgeData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{11}
}

func (x *EarningSnapshotAdminPledgeData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EarningSnapshotAdminCancelPledgeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EarningSnapshotAdminCancelPledgeData) Reset() {
	*x = EarningSnapshotAdminCancelPledgeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminCancelPledgeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminCancelPledgeData) ProtoMessage() {}

func (x *EarningSnapshotAdminCancelPledgeData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminCancelPledgeData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminCancelPledgeData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{12}
}

func (x *EarningSnapshotAdminCancelPledgeData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EarningSnapshotAdminLegacyAssetMigrationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProductId int32  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Amount    int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) Reset() {
	*x = EarningSnapshotAdminLegacyAssetMigrationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminLegacyAssetMigrationData) ProtoMessage() {}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminLegacyAssetMigrationData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminLegacyAssetMigrationData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{13}
}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *EarningSnapshotAdminLegacyAssetMigrationData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EarningSnapshotAdminAuditApproveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *EarningSnapshotAdminAuditApproveData) Reset() {
	*x = EarningSnapshotAdminAuditApproveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminAuditApproveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminAuditApproveData) ProtoMessage() {}

func (x *EarningSnapshotAdminAuditApproveData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminAuditApproveData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminAuditApproveData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{14}
}

func (x *EarningSnapshotAdminAuditApproveData) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type EarningSnapshotAdminAuditRejectData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *EarningSnapshotAdminAuditRejectData) Reset() {
	*x = EarningSnapshotAdminAuditRejectData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminAuditRejectData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminAuditRejectData) ProtoMessage() {}

func (x *EarningSnapshotAdminAuditRejectData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminAuditRejectData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminAuditRejectData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{15}
}

func (x *EarningSnapshotAdminAuditRejectData) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type EarningSnapshotAdminAutoReviseProductCapacityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int32 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *EarningSnapshotAdminAutoReviseProductCapacityData) Reset() {
	*x = EarningSnapshotAdminAutoReviseProductCapacityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningSnapshotAdminAutoReviseProductCapacityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningSnapshotAdminAutoReviseProductCapacityData) ProtoMessage() {}

func (x *EarningSnapshotAdminAutoReviseProductCapacityData) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningSnapshotAdminAutoReviseProductCapacityData.ProtoReflect.Descriptor instead.
func (*EarningSnapshotAdminAutoReviseProductCapacityData) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{16}
}

func (x *EarningSnapshotAdminAutoReviseProductCapacityData) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type ListAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{17}
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId   string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	ChainId   string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Symbol    string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Logo      string `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo,omitempty"`
	PriceUsd  string `protobuf:"bytes,6,opt,name=price_usd,json=priceUsd,proto3" json:"price_usd,omitempty"`
	PriceBtc  string `protobuf:"bytes,7,opt,name=price_btc,json=priceBtc,proto3" json:"price_btc,omitempty"`
	Order     int32  `protobuf:"varint,8,opt,name=order,proto3" json:"order,omitempty"`
	UpdatedAt int32  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ChainLogo string `protobuf:"bytes,10,opt,name=chain_logo,json=chainLogo,proto3" json:"chain_logo,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{18}
}

func (x *Asset) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Asset) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Asset) GetPriceUsd() string {
	if x != nil {
		return x.PriceUsd
	}
	return ""
}

func (x *Asset) GetPriceBtc() string {
	if x != nil {
		return x.PriceBtc
	}
	return ""
}

func (x *Asset) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Asset) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Asset) GetChainLogo() string {
	if x != nil {
		return x.ChainLogo
	}
	return ""
}

type ListAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{19}
}

func (x *ListAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type EarningProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description               string                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssetId                   string                    `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	InterestRate              string                    `protobuf:"bytes,5,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	MinAmountPerOrder         string                    `protobuf:"bytes,6,opt,name=min_amount_per_order,json=minAmountPerOrder,proto3" json:"min_amount_per_order,omitempty"`
	MaxAmountPerOrder         string                    `protobuf:"bytes,7,opt,name=max_amount_per_order,json=maxAmountPerOrder,proto3" json:"max_amount_per_order,omitempty"`
	Capacity                  string                    `protobuf:"bytes,8,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Sold                      string                    `protobuf:"bytes,9,opt,name=sold,proto3" json:"sold,omitempty"`
	QueuingBuyAmount          string                    `protobuf:"bytes,10,opt,name=queuing_buy_amount,json=queuingBuyAmount,proto3" json:"queuing_buy_amount,omitempty"`
	QueuingRedeemAmount       string                    `protobuf:"bytes,11,opt,name=queuing_redeem_amount,json=queuingRedeemAmount,proto3" json:"queuing_redeem_amount,omitempty"`
	Version                   string                    `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt                 int32                     `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Type                      EarningProductType_Enum   `protobuf:"varint,14,opt,name=type,proto3,enum=pool.v1.EarningProductType_Enum" json:"type,omitempty"`
	Status                    EarningProductStatus_Enum `protobuf:"varint,15,opt,name=status,proto3,enum=pool.v1.EarningProductStatus_Enum" json:"status,omitempty"`
	RunningNodes              int32                     `protobuf:"varint,16,opt,name=running_nodes,json=runningNodes,proto3" json:"running_nodes,omitempty"`
	InterestPaymentDuration   int32                     `protobuf:"varint,17,opt,name=interest_payment_duration,json=interestPaymentDuration,proto3" json:"interest_payment_duration,omitempty"`
	ExpandingAmount           string                    `protobuf:"bytes,18,opt,name=expanding_amount,json=expandingAmount,proto3" json:"expanding_amount,omitempty"`
	FilledExpandingAmount     string                    `protobuf:"bytes,19,opt,name=filled_expanding_amount,json=filledExpandingAmount,proto3" json:"filled_expanding_amount,omitempty"`
	ExpectedExpandingEndAt    int32                     `protobuf:"varint,20,opt,name=expected_expanding_end_at,json=expectedExpandingEndAt,proto3" json:"expected_expanding_end_at,omitempty"`
	UserIsInWhitelist         bool                      `protobuf:"varint,21,opt,name=user_is_in_whitelist,json=userIsInWhitelist,proto3" json:"user_is_in_whitelist,omitempty"`
	DescriptionRules          string                    `protobuf:"bytes,22,opt,name=description_rules,json=descriptionRules,proto3" json:"description_rules,omitempty"`
	DescriptionRiskDisclosure string                    `protobuf:"bytes,23,opt,name=description_risk_disclosure,json=descriptionRiskDisclosure,proto3" json:"description_risk_disclosure,omitempty"`
	EnabledWhitelistLimit     bool                      `protobuf:"varint,24,opt,name=enabled_whitelist_limit,json=enabledWhitelistLimit,proto3" json:"enabled_whitelist_limit,omitempty"`
	Precision                 int32                     `protobuf:"varint,26,opt,name=precision,proto3" json:"precision,omitempty"`
	BuyDisabled               bool                      `protobuf:"varint,27,opt,name=buy_disabled,json=buyDisabled,proto3" json:"buy_disabled,omitempty"`
	RedeemDisabled            bool                      `protobuf:"varint,28,opt,name=redeem_disabled,json=redeemDisabled,proto3" json:"redeem_disabled,omitempty"`
}

func (x *EarningProduct) Reset() {
	*x = EarningProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarningProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarningProduct) ProtoMessage() {}

func (x *EarningProduct) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarningProduct.ProtoReflect.Descriptor instead.
func (*EarningProduct) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{20}
}

func (x *EarningProduct) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EarningProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EarningProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EarningProduct) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *EarningProduct) GetInterestRate() string {
	if x != nil {
		return x.InterestRate
	}
	return ""
}

func (x *EarningProduct) GetMinAmountPerOrder() string {
	if x != nil {
		return x.MinAmountPerOrder
	}
	return ""
}

func (x *EarningProduct) GetMaxAmountPerOrder() string {
	if x != nil {
		return x.MaxAmountPerOrder
	}
	return ""
}

func (x *EarningProduct) GetCapacity() string {
	if x != nil {
		return x.Capacity
	}
	return ""
}

func (x *EarningProduct) GetSold() string {
	if x != nil {
		return x.Sold
	}
	return ""
}

func (x *EarningProduct) GetQueuingBuyAmount() string {
	if x != nil {
		return x.QueuingBuyAmount
	}
	return ""
}

func (x *EarningProduct) GetQueuingRedeemAmount() string {
	if x != nil {
		return x.QueuingRedeemAmount
	}
	return ""
}

func (x *EarningProduct) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EarningProduct) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *EarningProduct) GetType() EarningProductType_Enum {
	if x != nil {
		return x.Type
	}
	return EarningProductType_NOT_SET
}

func (x *EarningProduct) GetStatus() EarningProductStatus_Enum {
	if x != nil {
		return x.Status
	}
	return EarningProductStatus_NOT_SET
}

func (x *EarningProduct) GetRunningNodes() int32 {
	if x != nil {
		return x.RunningNodes
	}
	return 0
}

func (x *EarningProduct) GetInterestPaymentDuration() int32 {
	if x != nil {
		return x.InterestPaymentDuration
	}
	return 0
}

func (x *EarningProduct) GetExpandingAmount() string {
	if x != nil {
		return x.ExpandingAmount
	}
	return ""
}

func (x *EarningProduct) GetFilledExpandingAmount() string {
	if x != nil {
		return x.FilledExpandingAmount
	}
	return ""
}

func (x *EarningProduct) GetExpectedExpandingEndAt() int32 {
	if x != nil {
		return x.ExpectedExpandingEndAt
	}
	return 0
}

func (x *EarningProduct) GetUserIsInWhitelist() bool {
	if x != nil {
		return x.UserIsInWhitelist
	}
	return false
}

func (x *EarningProduct) GetDescriptionRules() string {
	if x != nil {
		return x.DescriptionRules
	}
	return ""
}

func (x *EarningProduct) GetDescriptionRiskDisclosure() string {
	if x != nil {
		return x.DescriptionRiskDisclosure
	}
	return ""
}

func (x *EarningProduct) GetEnabledWhitelistLimit() bool {
	if x != nil {
		return x.EnabledWhitelistLimit
	}
	return false
}

func (x *EarningProduct) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *EarningProduct) GetBuyDisabled() bool {
	if x != nil {
		return x.BuyDisabled
	}
	return false
}

func (x *EarningProduct) GetRedeemDisabled() bool {
	if x != nil {
		return x.RedeemDisabled
	}
	return false
}

type GetEarningProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEarningProductRequest) Reset() {
	*x = GetEarningProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEarningProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEarningProductRequest) ProtoMessage() {}

func (x *GetEarningProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEarningProductRequest.ProtoReflect.Descriptor instead.
func (*GetEarningProductRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{21}
}

func (x *GetEarningProductRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEarningProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *EarningProduct `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetEarningProductResponse) Reset() {
	*x = GetEarningProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEarningProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEarningProductResponse) ProtoMessage() {}

func (x *GetEarningProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEarningProductResponse.ProtoReflect.Descriptor instead.
func (*GetEarningProductResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{22}
}

func (x *GetEarningProductResponse) GetProduct() *EarningProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type ListEarningProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EarningProductType_Enum `protobuf:"varint,1,opt,name=type,proto3,enum=pool.v1.EarningProductType_Enum" json:"type,omitempty"`
}

func (x *ListEarningProductsRequest) Reset() {
	*x = ListEarningProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEarningProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarningProductsRequest) ProtoMessage() {}

func (x *ListEarningProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarningProductsRequest.ProtoReflect.Descriptor instead.
func (*ListEarningProductsRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{23}
}

func (x *ListEarningProductsRequest) GetType() EarningProductType_Enum {
	if x != nil {
		return x.Type
	}
	return EarningProductType_NOT_SET
}

type ListEarningProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*EarningProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListEarningProductsResponse) Reset() {
	*x = ListEarningProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEarningProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEarningProductsResponse) ProtoMessage() {}

func (x *ListEarningProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEarningProductsResponse.ProtoReflect.Descriptor instead.
func (*ListEarningProductsResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{24}
}

func (x *ListEarningProductsResponse) GetProducts() []*EarningProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type UserEarningProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId              string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EarningProductId    int32  `protobuf:"varint,3,opt,name=earning_product_id,json=earningProductId,proto3" json:"earning_product_id,omitempty"`
	Amount              string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	QueuingBuyAmount    string `protobuf:"bytes,5,opt,name=queuing_buy_amount,json=queuingBuyAmount,proto3" json:"queuing_buy_amount,omitempty"`
	QueuingRedeemAmount string `protobuf:"bytes,6,opt,name=queuing_redeem_amount,json=queuingRedeemAmount,proto3" json:"queuing_redeem_amount,omitempty"`
	Version             string `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt           int32  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           int32  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TotalRevenue        string `protobuf:"bytes,10,opt,name=total_revenue,json=totalRevenue,proto3" json:"total_revenue,omitempty"`
	Pledged             bool   `protobuf:"varint,11,opt,name=pledged,proto3" json:"pledged,omitempty"`
	ExpandBuyAmount     string `protobuf:"bytes,12,opt,name=expand_buy_amount,json=expandBuyAmount,proto3" json:"expand_buy_amount,omitempty"`
	BuyDisabled         bool   `protobuf:"varint,13,opt,name=buy_disabled,json=buyDisabled,proto3" json:"buy_disabled,omitempty"`
	RedeemDisabled      bool   `protobuf:"varint,14,opt,name=redeem_disabled,json=redeemDisabled,proto3" json:"redeem_disabled,omitempty"`
}

func (x *UserEarningProduct) Reset() {
	*x = UserEarningProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEarningProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEarningProduct) ProtoMessage() {}

func (x *UserEarningProduct) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEarningProduct.ProtoReflect.Descriptor instead.
func (*UserEarningProduct) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{25}
}

func (x *UserEarningProduct) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserEarningProduct) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserEarningProduct) GetEarningProductId() int32 {
	if x != nil {
		return x.EarningProductId
	}
	return 0
}

func (x *UserEarningProduct) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UserEarningProduct) GetQueuingBuyAmount() string {
	if x != nil {
		return x.QueuingBuyAmount
	}
	return ""
}

func (x *UserEarningProduct) GetQueuingRedeemAmount() string {
	if x != nil {
		return x.QueuingRedeemAmount
	}
	return ""
}

func (x *UserEarningProduct) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UserEarningProduct) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserEarningProduct) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserEarningProduct) GetTotalRevenue() string {
	if x != nil {
		return x.TotalRevenue
	}
	return ""
}

func (x *UserEarningProduct) GetPledged() bool {
	if x != nil {
		return x.Pledged
	}
	return false
}

func (x *UserEarningProduct) GetExpandBuyAmount() string {
	if x != nil {
		return x.ExpandBuyAmount
	}
	return ""
}

func (x *UserEarningProduct) GetBuyDisabled() bool {
	if x != nil {
		return x.BuyDisabled
	}
	return false
}

func (x *UserEarningProduct) GetRedeemDisabled() bool {
	if x != nil {
		return x.RedeemDisabled
	}
	return false
}

type ListMyEarningProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMyEarningProductsRequest) Reset() {
	*x = ListMyEarningProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyEarningProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyEarningProductsRequest) ProtoMessage() {}

func (x *ListMyEarningProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyEarningProductsRequest.ProtoReflect.Descriptor instead.
func (*ListMyEarningProductsRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{26}
}

type ListMyEarningProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*UserEarningProduct `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ListMyEarningProductsResponse) Reset() {
	*x = ListMyEarningProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMyEarningProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyEarningProductsResponse) ProtoMessage() {}

func (x *ListMyEarningProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyEarningProductsResponse.ProtoReflect.Descriptor instead.
func (*ListMyEarningProductsResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{27}
}

func (x *ListMyEarningProductsResponse) GetProducts() []*UserEarningProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type GetMyEarningProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMyEarningProductRequest) Reset() {
	*x = GetMyEarningProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyEarningProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEarningProductRequest) ProtoMessage() {}

func (x *GetMyEarningProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEarningProductRequest.ProtoReflect.Descriptor instead.
func (*GetMyEarningProductRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{28}
}

func (x *GetMyEarningProductRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMyEarningProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *UserEarningProduct `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetMyEarningProductResponse) Reset() {
	*x = GetMyEarningProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyEarningProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEarningProductResponse) ProtoMessage() {}

func (x *GetMyEarningProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEarningProductResponse.ProtoReflect.Descriptor instead.
func (*GetMyEarningProductResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{29}
}

func (x *GetMyEarningProductResponse) GetProduct() *UserEarningProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type GetEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowId string `protobuf:"bytes,1,opt,name=follow_id,json=followId,proto3" json:"follow_id,omitempty"`
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{30}
}

func (x *GetEventRequest) GetFollowId() string {
	if x != nil {
		return x.FollowId
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string           `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action       EventAction_Enum `protobuf:"varint,3,opt,name=action,proto3,enum=pool.v1.EventAction_Enum" json:"action,omitempty"`
	ProductId    int32            `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	AssetId      string           `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount       string           `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	FilledAmount string           `protobuf:"bytes,7,opt,name=filled_amount,json=filledAmount,proto3" json:"filled_amount,omitempty"`
	Status       EventStatus_Enum `protobuf:"varint,8,opt,name=status,proto3,enum=pool.v1.EventStatus_Enum" json:"status,omitempty"`
	// set only if the status is failed
	Error               EventError_Enum `protobuf:"varint,9,opt,name=error,proto3,enum=pool.v1.EventError_Enum" json:"error,omitempty"`
	FollowId            string          `protobuf:"bytes,10,opt,name=follow_id,json=followId,proto3" json:"follow_id,omitempty"`
	CreatedAt           int32           `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	QueuingAheadAmount  string          `protobuf:"bytes,12,opt,name=queuing_ahead_amount,json=queuingAheadAmount,proto3" json:"queuing_ahead_amount,omitempty"`
	InterestPaymentDate string          `protobuf:"bytes,13,opt,name=interest_payment_date,json=interestPaymentDate,proto3" json:"interest_payment_date,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{31}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetAction() EventAction_Enum {
	if x != nil {
		return x.Action
	}
	return EventAction_NOT_SET
}

func (x *Event) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Event) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Event) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Event) GetFilledAmount() string {
	if x != nil {
		return x.FilledAmount
	}
	return ""
}

func (x *Event) GetStatus() EventStatus_Enum {
	if x != nil {
		return x.Status
	}
	return EventStatus_NOT_SET
}

func (x *Event) GetError() EventError_Enum {
	if x != nil {
		return x.Error
	}
	return EventError_NOT_SET
}

func (x *Event) GetFollowId() string {
	if x != nil {
		return x.FollowId
	}
	return ""
}

func (x *Event) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Event) GetQueuingAheadAmount() string {
	if x != nil {
		return x.QueuingAheadAmount
	}
	return ""
}

func (x *Event) GetInterestPaymentDate() string {
	if x != nil {
		return x.InterestPaymentDate
	}
	return ""
}

type GetEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *GetEventResponse) Reset() {
	*x = GetEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResponse) ProtoMessage() {}

func (x *GetEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResponse.ProtoReflect.Descriptor instead.
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{32}
}

func (x *GetEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type ListEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EarningProductId int32                   `protobuf:"varint,1,opt,name=earning_product_id,json=earningProductId,proto3" json:"earning_product_id,omitempty"`
	Actions          []EventAction_Enum      `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=pool.v1.EventAction_Enum" json:"actions,omitempty"`
	Statuses         []EventStatus_Enum      `protobuf:"varint,3,rep,packed,name=statuses,proto3,enum=pool.v1.EventStatus_Enum" json:"statuses,omitempty"`
	Offset           int32                   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit            int32                   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"` // default 100, max 500
	StartAt          int32                   `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt            int32                   `protobuf:"varint,7,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	ProductType      EarningProductType_Enum `protobuf:"varint,8,opt,name=product_type,json=productType,proto3,enum=pool.v1.EarningProductType_Enum" json:"product_type,omitempty"`
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{33}
}

func (x *ListEventsRequest) GetEarningProductId() int32 {
	if x != nil {
		return x.EarningProductId
	}
	return 0
}

func (x *ListEventsRequest) GetActions() []EventAction_Enum {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ListEventsRequest) GetStatuses() []EventStatus_Enum {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListEventsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListEventsRequest) GetStartAt() int32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *ListEventsRequest) GetEndAt() int32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *ListEventsRequest) GetProductType() EarningProductType_Enum {
	if x != nil {
		return x.ProductType
	}
	return EarningProductType_NOT_SET
}

type ListEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{34}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Audit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AssetId    string                 `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount     string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	UserId     string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status     Audit_Status           `protobuf:"varint,6,opt,name=status,proto3,enum=pool.v1.Audit_Status" json:"status,omitempty"`
	Memo       string                 `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
	ReviewedBy string                 `protobuf:"bytes,8,opt,name=reviewed_by,json=reviewedBy,proto3" json:"reviewed_by,omitempty"`
}

func (x *Audit) Reset() {
	*x = Audit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit) ProtoMessage() {}

func (x *Audit) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audit.ProtoReflect.Descriptor instead.
func (*Audit) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{35}
}

func (x *Audit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Audit) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Audit) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Audit) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Audit) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Audit) GetStatus() Audit_Status {
	if x != nil {
		return x.Status
	}
	return Audit_NOT_SET
}

func (x *Audit) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Audit) GetReviewedBy() string {
	if x != nil {
		return x.ReviewedBy
	}
	return ""
}

type FindAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindAuditRequest) Reset() {
	*x = FindAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAuditRequest) ProtoMessage() {}

func (x *FindAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAuditRequest.ProtoReflect.Descriptor instead.
func (*FindAuditRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{36}
}

func (x *FindAuditRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audit *Audit `protobuf:"bytes,1,opt,name=audit,proto3" json:"audit,omitempty"`
}

func (x *FindAuditResponse) Reset() {
	*x = FindAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAuditResponse) ProtoMessage() {}

func (x *FindAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAuditResponse.ProtoReflect.Descriptor instead.
func (*FindAuditResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{37}
}

func (x *FindAuditResponse) GetAudit() *Audit {
	if x != nil {
		return x.Audit
	}
	return nil
}

type ListAuditsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListAuditsRequest) Reset() {
	*x = ListAuditsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditsRequest) ProtoMessage() {}

func (x *ListAuditsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditsRequest.ProtoReflect.Descriptor instead.
func (*ListAuditsRequest) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{38}
}

func (x *ListAuditsRequest) GetOffset() *timestamppb.Timestamp {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ListAuditsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListAuditsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audits []*Audit `protobuf:"bytes,1,rep,name=audits,proto3" json:"audits,omitempty"`
}

func (x *ListAuditsResponse) Reset() {
	*x = ListAuditsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_v1_pool_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditsResponse) ProtoMessage() {}

func (x *ListAuditsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_v1_pool_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditsResponse.ProtoReflect.Descriptor instead.
func (*ListAuditsResponse) Descriptor() ([]byte, []int) {
	return file_pool_v1_pool_proto_rawDescGZIP(), []int{39}
}

func (x *ListAuditsResponse) GetAudits() []*Audit {
	if x != nil {
		return x.Audits
	}
	return nil
}

var File_pool_v1_pool_proto protoreflect.FileDescriptor

var file_pool_v1_pool_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea,
	0x04, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xdb, 0x04,
	0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50,
	0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49,
	0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x45, 0x41, 0x52, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x41, 0x53, 0x53, 0x45,
	0x54, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29,
	0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f,
	0x4d, 0x49, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x12, 0x2d, 0x0a, 0x29, 0x45,
	0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4d,
	0x41, 0x58, 0x5f, 0x50, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53,
	0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x45, 0x44, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4e,
	0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x2b, 0x0a, 0x27,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x55, 0x46,
	0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x10, 0x07, 0x12, 0x33, 0x0a, 0x2f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x48, 0x41,
	0x53, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x49,
	0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x09, 0x12, 0x26, 0x0a, 0x22, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43,
	0x54, 0x5f, 0x45, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x0a, 0x12, 0x29, 0x0a, 0x25, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x42, 0x45,
	0x45, 0x4e, 0x5f, 0x50, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13,
	0x45, 0x4f, 0x44, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x41, 0x50, 0x50, 0x4c,
	0x49, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x10, 0x0e, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x45, 0x44, 0x10, 0x0f,
	0x12, 0x19, 0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f,
	0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x10, 0x22, 0xff, 0x02, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x02, 0x0a, 0x04,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x44, 0x45, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x5f,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x49, 0x58, 0x49, 0x4e, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54,
	0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x64, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x41,
	0x4e, 0x44, 0x10, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x41,
	0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x66, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x5f, 0x50, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x10, 0x67, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x50, 0x4c, 0x45, 0x44, 0x47, 0x45,
	0x10, 0x68, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x45, 0x47, 0x41,
	0x43, 0x59, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x69, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x41, 0x55,
	0x44, 0x49, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x10, 0x6a, 0x12, 0x16, 0x0a,
	0x12, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x4a,
	0x45, 0x43, 0x54, 0x10, 0x6b, 0x12, 0x26, 0x0a, 0x22, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x5f, 0x43, 0x41, 0x50, 0x41, 0x43, 0x49, 0x54, 0x59, 0x10, 0x6c, 0x22, 0x70, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x04,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x55, 0x45, 0x55,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22,
	0x68, 0x0a, 0x14, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x52, 0x45, 0x43, 0x52, 0x55, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x50,
	0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x22, 0x43, 0x0a, 0x12, 0x45, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2d, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x41, 0x56, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x02, 0x22, 0x82,
	0x01, 0x0a, 0x16, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x1e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xa1, 0x01, 0x0a, 0x27, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x25, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x2d, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x24, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x7e, 0x0a, 0x2c, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x41, 0x0a, 0x24, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x23, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x31, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x76, 0x69, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b,
	0x02, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x74, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x74, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x3c, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xfa, 0x08, 0x0a, 0x0e, 0x45,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6f, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x75, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x17, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x49, 0x73, 0x49, 0x6e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x3e, 0x0a, 0x1b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x69, 0x73, 0x6b, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x69, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x36, 0x0a, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x75, 0x79,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x4a, 0x04, 0x08, 0x19, 0x10, 0x1a, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x22, 0x52, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xf4, 0x03, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x75, 0x79,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71,
	0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x79,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x75,
	0x79, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x58, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x2c, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x22, 0xdf, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x71, 0x75, 0x65, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x71, 0x75, 0x65, 0x75,
	0x69, 0x6e, 0x67, 0x41, 0x68, 0x65, 0x61, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xd2, 0x02, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x3c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xb5, 0x02, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50,
	0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x22, 0x22, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52,
	0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x06, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x73, 0x32, 0xef, 0x05, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x45,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x45, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6f, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31,
	0x3b, 0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pool_v1_pool_proto_rawDescOnce sync.Once
	file_pool_v1_pool_proto_rawDescData = file_pool_v1_pool_proto_rawDesc
)

func file_pool_v1_pool_proto_rawDescGZIP() []byte {
	file_pool_v1_pool_proto_rawDescOnce.Do(func() {
		file_pool_v1_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_pool_v1_pool_proto_rawDescData)
	})
	return file_pool_v1_pool_proto_rawDescData
}

var file_pool_v1_pool_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_pool_v1_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_pool_v1_pool_proto_goTypes = []interface{}{
	(EventError_Enum)(0),                                      // 0: pool.v1.EventError.Enum
	(EventAction_Enum)(0),                                     // 1: pool.v1.EventAction.Enum
	(EventStatus_Enum)(0),                                     // 2: pool.v1.EventStatus.Enum
	(EarningProductStatus_Enum)(0),                            // 3: pool.v1.EarningProductStatus.Enum
	(EarningProductType_Enum)(0),                              // 4: pool.v1.EarningProductType.Enum
	(Audit_Status)(0),                                         // 5: pool.v1.Audit.Status
	(*EventError)(nil),                                        // 6: pool.v1.EventError
	(*EventAction)(nil),                                       // 7: pool.v1.EventAction
	(*EventStatus)(nil),                                       // 8: pool.v1.EventStatus
	(*EarningProductStatus)(nil),                              // 9: pool.v1.EarningProductStatus
	(*EarningProductType)(nil),                                // 10: pool.v1.EarningProductType
	(*EarningSnapshotBuyData)(nil),                            // 11: pool.v1.EarningSnapshotBuyData
	(*EarningSnapshotRedeemData)(nil),                         // 12: pool.v1.EarningSnapshotRedeemData
	(*EarningSnapshotCancelQueueData)(nil),                    // 13: pool.v1.EarningSnapshotCancelQueueData
	(*EarningSnapshotAdminInterestPaymentData)(nil),           // 14: pool.v1.EarningSnapshotAdminInterestPaymentData
	(*EarningSnapshotAdminProductExpandData)(nil),             // 15: pool.v1.EarningSnapshotAdminProductExpandData
	(*EarningSnapshotAdminProductMergeExpansionData)(nil),     // 16: pool.v1.EarningSnapshotAdminProductMergeExpansionData
	(*EarningSnapshotAdminPledgeData)(nil),                    // 17: pool.v1.EarningSnapshotAdminPledgeData
	(*EarningSnapshotAdminCancelPledgeData)(nil),              // 18: pool.v1.EarningSnapshotAdminCancelPledgeData
	(*EarningSnapshotAdminLegacyAssetMigrationData)(nil),      // 19: pool.v1.EarningSnapshotAdminLegacyAssetMigrationData
	(*EarningSnapshotAdminAuditApproveData)(nil),              // 20: pool.v1.EarningSnapshotAdminAuditApproveData
	(*EarningSnapshotAdminAuditRejectData)(nil),               // 21: pool.v1.EarningSnapshotAdminAuditRejectData
	(*EarningSnapshotAdminAutoReviseProductCapacityData)(nil), // 22: pool.v1.EarningSnapshotAdminAutoReviseProductCapacityData
	(*ListAssetsRequest)(nil),                                 // 23: pool.v1.ListAssetsRequest
	(*Asset)(nil),                                             // 24: pool.v1.Asset
	(*ListAssetsResponse)(nil),                                // 25: pool.v1.ListAssetsResponse
	(*EarningProduct)(nil),                                    // 26: pool.v1.EarningProduct
	(*GetEarningProductRequest)(nil),                          // 27: pool.v1.GetEarningProductRequest
	(*GetEarningProductResponse)(nil),                         // 28: pool.v1.GetEarningProductResponse
	(*ListEarningProductsRequest)(nil),                        // 29: pool.v1.ListEarningProductsRequest
	(*ListEarningProductsResponse)(nil),                       // 30: pool.v1.ListEarningProductsResponse
	(*UserEarningProduct)(nil),                                // 31: pool.v1.UserEarningProduct
	(*ListMyEarningProductsRequest)(nil),                      // 32: pool.v1.ListMyEarningProductsRequest
	(*ListMyEarningProductsResponse)(nil),                     // 33: pool.v1.ListMyEarningProductsResponse
	(*GetMyEarningProductRequest)(nil),                        // 34: pool.v1.GetMyEarningProductRequest
	(*GetMyEarningProductResponse)(nil),                       // 35: pool.v1.GetMyEarningProductResponse
	(*GetEventRequest)(nil),                                   // 36: pool.v1.GetEventRequest
	(*Event)(nil),                                             // 37: pool.v1.Event
	(*GetEventResponse)(nil),                                  // 38: pool.v1.GetEventResponse
	(*ListEventsRequest)(nil),                                 // 39: pool.v1.ListEventsRequest
	(*ListEventsResponse)(nil),                                // 40: pool.v1.ListEventsResponse
	(*Audit)(nil),                                             // 41: pool.v1.Audit
	(*FindAuditRequest)(nil),                                  // 42: pool.v1.FindAuditRequest
	(*FindAuditResponse)(nil),                                 // 43: pool.v1.FindAuditResponse
	(*ListAuditsRequest)(nil),                                 // 44: pool.v1.ListAuditsRequest
	(*ListAuditsResponse)(nil),                                // 45: pool.v1.ListAuditsResponse
	(*timestamppb.Timestamp)(nil),                             // 46: google.protobuf.Timestamp
}
var file_pool_v1_pool_proto_depIdxs = []int32{
	3,  // 0: pool.v1.EarningSnapshotBuyData.product_status:type_name -> pool.v1.EarningProductStatus.Enum
	3,  // 1: pool.v1.EarningSnapshotRedeemData.product_status:type_name -> pool.v1.EarningProductStatus.Enum
	4,  // 2: pool.v1.EarningSnapshotAdminInterestPaymentData.product_type:type_name -> pool.v1.EarningProductType.Enum
	24, // 3: pool.v1.ListAssetsResponse.assets:type_name -> pool.v1.Asset
	4,  // 4: pool.v1.EarningProduct.type:type_name -> pool.v1.EarningProductType.Enum
	3,  // 5: pool.v1.EarningProduct.status:type_name -> pool.v1.EarningProductStatus.Enum
	26, // 6: pool.v1.GetEarningProductResponse.product:type_name -> pool.v1.EarningProduct
	4,  // 7: pool.v1.ListEarningProductsRequest.type:type_name -> pool.v1.EarningProductType.Enum
	26, // 8: pool.v1.ListEarningProductsResponse.products:type_name -> pool.v1.EarningProduct
	31, // 9: pool.v1.ListMyEarningProductsResponse.products:type_name -> pool.v1.UserEarningProduct
	31, // 10: pool.v1.GetMyEarningProductResponse.product:type_name -> pool.v1.UserEarningProduct
	1,  // 11: pool.v1.Event.action:type_name -> pool.v1.EventAction.Enum
	2,  // 12: pool.v1.Event.status:type_name -> pool.v1.EventStatus.Enum
	0,  // 13: pool.v1.Event.error:type_name -> pool.v1.EventError.Enum
	37, // 14: pool.v1.GetEventResponse.event:type_name -> pool.v1.Event
	1,  // 15: pool.v1.ListEventsRequest.actions:type_name -> pool.v1.EventAction.Enum
	2,  // 16: pool.v1.ListEventsRequest.statuses:type_name -> pool.v1.EventStatus.Enum
	4,  // 17: pool.v1.ListEventsRequest.product_type:type_name -> pool.v1.EarningProductType.Enum
	37, // 18: pool.v1.ListEventsResponse.events:type_name -> pool.v1.Event
	46, // 19: pool.v1.Audit.created_at:type_name -> google.protobuf.Timestamp
	5,  // 20: pool.v1.Audit.status:type_name -> pool.v1.Audit.Status
	41, // 21: pool.v1.FindAuditResponse.audit:type_name -> pool.v1.Audit
	46, // 22: pool.v1.ListAuditsRequest.offset:type_name -> google.protobuf.Timestamp
	41, // 23: pool.v1.ListAuditsResponse.audits:type_name -> pool.v1.Audit
	23, // 24: pool.v1.PoolService.ListAssets:input_type -> pool.v1.ListAssetsRequest
	36, // 25: pool.v1.PoolService.GetEvent:input_type -> pool.v1.GetEventRequest
	39, // 26: pool.v1.PoolService.ListEvents:input_type -> pool.v1.ListEventsRequest
	27, // 27: pool.v1.PoolService.GetEarningProduct:input_type -> pool.v1.GetEarningProductRequest
	29, // 28: pool.v1.PoolService.ListEarningProducts:input_type -> pool.v1.ListEarningProductsRequest
	32, // 29: pool.v1.PoolService.ListMyEarningProducts:input_type -> pool.v1.ListMyEarningProductsRequest
	34, // 30: pool.v1.PoolService.GetMyEarningProduct:input_type -> pool.v1.GetMyEarningProductRequest
	42, // 31: pool.v1.PoolService.FindAudit:input_type -> pool.v1.FindAuditRequest
	44, // 32: pool.v1.PoolService.ListAudits:input_type -> pool.v1.ListAuditsRequest
	25, // 33: pool.v1.PoolService.ListAssets:output_type -> pool.v1.ListAssetsResponse
	38, // 34: pool.v1.PoolService.GetEvent:output_type -> pool.v1.GetEventResponse
	40, // 35: pool.v1.PoolService.ListEvents:output_type -> pool.v1.ListEventsResponse
	28, // 36: pool.v1.PoolService.GetEarningProduct:output_type -> pool.v1.GetEarningProductResponse
	30, // 37: pool.v1.PoolService.ListEarningProducts:output_type -> pool.v1.ListEarningProductsResponse
	33, // 38: pool.v1.PoolService.ListMyEarningProducts:output_type -> pool.v1.ListMyEarningProductsResponse
	35, // 39: pool.v1.PoolService.GetMyEarningProduct:output_type -> pool.v1.GetMyEarningProductResponse
	43, // 40: pool.v1.PoolService.FindAudit:output_type -> pool.v1.FindAuditResponse
	45, // 41: pool.v1.PoolService.ListAudits:output_type -> pool.v1.ListAuditsResponse
	33, // [33:42] is the sub-list for method output_type
	24, // [24:33] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pool_v1_pool_proto_init() }
func file_pool_v1_pool_proto_init() {
	if File_pool_v1_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pool_v1_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningProductStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningProductType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotBuyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotRedeemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotCancelQueueData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminInterestPaymentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminProductExpandData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminProductMergeExpansionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminPledgeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminCancelPledgeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminLegacyAssetMigrationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminAuditApproveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminAuditRejectData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningSnapshotAdminAutoReviseProductCapacityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarningProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEarningProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEarningProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEarningProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEarningProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEarningProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyEarningProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMyEarningProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyEarningProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyEarningProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_v1_pool_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pool_v1_pool_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pool_v1_pool_proto_goTypes,
		DependencyIndexes: file_pool_v1_pool_proto_depIdxs,
		EnumInfos:         file_pool_v1_pool_proto_enumTypes,
		MessageInfos:      file_pool_v1_pool_proto_msgTypes,
	}.Build()
	File_pool_v1_pool_proto = out.File
	file_pool_v1_pool_proto_rawDesc = nil
	file_pool_v1_pool_proto_goTypes = nil
	file_pool_v1_pool_proto_depIdxs = nil
}
