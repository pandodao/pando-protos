syntax = "proto3";

package pool.v1; 
option go_package = "github.com/fox-one/pando-protos/pool/v1;pool";

service PoolService {
  rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse);

  rpc GetEvent(GetEventRequest) returns (GetEventResponse);
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse);

  rpc ListEarningProducts(ListEarningProductsRequest) returns (ListEarningProductsResponse);
  rpc GetEarningProduct(GetEarningProductRequest) returns (GetEarningProductResponse);
  rpc ListMyEarningProducts(ListMyEarningProductsRequest) returns (ListMyEarningProductsResponse);
  rpc GetMyEarningProduct(GetMyEarningProductRequest) returns (GetMyEarningProductResponse);
}


message EarningAction {
  enum Enum {
    NOT_SET = 0;
    BUY = 1;
    REDEEM = 2;
    DEPOSIT = 3;
    INTEREST_PAYMENT = 4;
  }
}

message EarningStatus {
  enum Enum {
    NOT_SET = 0;
    AVAILABLE = 1;
    QUEUED = 2;
  }
}

message EarningProductType {
  enum Enum {
    NOT_SET = 0;
    DEFI_NODE = 1;
  }
}

message EventStatus {
  enum Enum {
    NOT_SET = 0;
    INIT = 1;
    SUCCESSFUL = 2;
    FAILED = 3;
  }
}

message UserEarningProductStatus {
  enum Enum {
    NOT_SET = 0;
    ACTIVE = 1;
    INACTIVE = 2;
  }
}

message EarningSnapshotBuyData {
  int64 product_id = 1;
}

message EarningSnapshotRedeemData {
  int64 earning_id = 1;
  int64 amount = 2; // fixedDecimalPrecision = 8
}

message ListAssetsRequest {}

message Asset {
  string asset_id = 1;
  string chain_id = 2;
  string symbol = 3;
  string name = 4;
  string logo = 5;
  string price_usd = 6;
  string price_btc = 7;
  int64 order = 8;
  int32 updated_at = 9;
}

message ListAssetsResponse {
  repeated Asset assets = 1;
}

message EarningProduct {
  int64 id = 1;
  string account_id = 2;
  string name = 3;
  string description = 4;
  string asset_id = 5;
  string interest_rate =6;
  // int64 period = 7;
  string min_amount_per_order = 8;
  string max_amount_per_order = 9;
  string sold = 10;
  string redeemed = 11;
  string capacity = 12;
  string amount = 13;
  // string borrow_rate = 14;
  // int64 borrow_rate_circle = 15;
  // int64 redemption_period = 16;
  int64 version = 17;
  // int32 borrow_rate_updated_at = 18;
  int32 created_at = 19;
  EarningProductType.Enum type = 20;
  EarningStatus.Enum status = 21;
  string queued_amount = 22;
}

message ListEarningProductsRequest {
  EarningProductType.Enum type = 1;
}

message ListEarningProductsResponse {
  repeated EarningProduct products = 1;
}

message GetEarningProductRequest {
  int64 id = 1;
}

message GetEarningProductResponse {
  EarningProduct product = 1;
}

message UserEarningProduct {
  int64 id = 1;
  string user_id = 2;
  int64 earning_product_id = 3;
  UserEarningProductStatus.Enum status = 4;
  string amount = 5;
  // string total_buy_amount = 6;
  // string total_redeem_amount = 7;
  int64 version = 8;
  int32 created_at = 9;
  int32 updated_at = 10;
  string queued_amount = 11;
}

message ListMyEarningProductsRequest {}

message ListMyEarningProductsResponse {
  repeated UserEarningProduct products = 1;
}

message GetMyEarningProductRequest {
  int64 id = 1;
}

message GetMyEarningProductResponse {
  UserEarningProduct product = 1;
}

message GetEventRequest {
  string follow_id = 1;
}

message Event {
  int64 id = 1;
  string user_id = 2;
  EarningAction.Enum action = 3;
  int64 product_id = 4;
  string asset_id = 5;
  string amount = 6;
  string extra = 7;
  EventStatus.Enum status = 8;
  string follow_id = 9;
  int32 created_at = 10;
}

message GetEventResponse {
  Event event = 1;
}

message ListEventsRequest {
  int64 earning_product_id = 1;
  EarningAction.Enum action = 2;
}

message ListEventsResponse {
  repeated Event events = 1;
}
