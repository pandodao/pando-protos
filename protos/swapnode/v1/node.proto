syntax = "proto3";

package swapnode.v1; 
option go_package = "github.com/fox-one/pando-protos/swapnode/v1;swapnode";

import "swapnode/v1/core.proto";
import "google/protobuf/timestamp.proto";

message ListPairsRequest {}

message ListPairsResponse {
  repeated Pair pairs = 1;
}

message ListOutputsRequest {
  string cursor = 1;
  int32 limit = 2;
  bool decode_header = 3;
}

message ListOutputsResponse {
  repeated Output outputs = 1;
}

message FindOrderRequest {
  string user_id = 1;
  string follow_id = 2;
  string trace_id = 3;
}

message FindOrderResponse {
  Order order = 1;
}

message FindDepositRequest {
  string user_id = 1;
  string follow_id = 2;
}

message FindDepositResponse {
  Deposit deposit = 1;
}

message ListTransactionsRequest {
  string group_id = 1;
}

message ListTransactionsResponse {
  repeated Transaction transactions = 1;
}

message GetInfoRequest {}

message GetInfoResponse {
  repeated string members = 1;
  int32 threshold = 2;
  string public_key = 3;
  string version = 4;
}

message FindTransferRequest {
  string id = 1;
}

message FindTransferResponse {
  Transfer transfer = 1;
}

message ListTransfersRequest {
  string cursor = 1;
  int32 limit = 2;
}

message ListTransfersResponse {
  repeated Transfer transfers = 1;
  string next_cursor = 2;
}

message FindAuditRequest {
  string id = 1;
}

message FindAuditResponse {
  Audit audit = 1;
}

message ListAuditsRequest {
  google.protobuf.Timestamp offset = 1;
  int64 limit = 2;
}

message ListAuditsResponse {
  repeated Audit audits = 1;
}

message ListExpiredDepositsRequest {
  int64 limit = 1;
}

message ListExpiredDepositsResponse {
  repeated Deposit deposits = 1;
}

service SwapNodeService {
    rpc ListPairs(ListPairsRequest) returns (ListPairsResponse);
    rpc ListOutputs(ListOutputsRequest) returns (ListOutputsResponse);
    rpc FindOrder(FindOrderRequest) returns (FindOrderResponse);
    rpc FindDeposit(FindDepositRequest) returns (FindDepositResponse);
    rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse);
    rpc GetInfo(GetInfoRequest) returns (GetInfoResponse);
    rpc FindTransfer(FindTransferRequest) returns (FindTransferResponse);
    rpc ListTransfers(ListTransfersRequest) returns (ListTransfersResponse);
    rpc FindAudit(FindAuditRequest) returns (FindAuditResponse);
    rpc ListAudits(ListAuditsRequest) returns (ListAuditsResponse);
    rpc ListExpiredDeposits(ListExpiredDepositsRequest) returns (ListExpiredDepositsResponse);
}
