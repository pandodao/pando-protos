syntax = "proto3";

package tradinglab.v1; 
option go_package = "github.com/fox-one/pando-protos/tradinglab/v1;tradinglab";

import "google/protobuf/timestamp.proto";

message Info {
    string version = 1;
    string client_id = 2;
}

message Asset {
    string id = 1;
    string symbol = 2;
    string name = 3;
    string logo = 4;
}

message Order {
    enum Type {
        TYPE_NOT_SET = 0;
        LIMIT = 1;
        AGG_SWAP = 2;
    }

    enum State {
        STATE_NOT_SET = 0;
        PENDING = 1;
        DONE = 2;
        REJECT = 3;
        CANCELLED = 4;
        EXPIRED = 5;
    }

    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp expired_at = 3;
    google.protobuf.Timestamp cancelled_at = 4;
    string user_id = 5;
    Type type = 6;
    State state = 7;
    string pay_asset_id = 8;
    Asset pay_asset = 9;
    string fill_asset_id = 10;
    Asset fill_asset = 11;
    string funds = 12;
    string expects = 13;
    string filled_funds = 14;
    string filled_amount = 15;
    string min_receive_amount = 16;
    string fee_asset_id = 17;
    string fee_amount = 18;
}

message Trade {
    message BinanceExtra {
        string symbol = 1;
        string side = 2;
    }

    message FswapExtra {
        message Path {
            string amount = 1;
            string share = 2;
            repeated int32 pairs = 3;
            repeated Asset assets = 4;
        }

        repeated Path routes = 1;
    }

    enum State {
        STATE_NOT_SET = 0;
        PENDING = 1;
        TRADING = 2;
        DONE = 3;
    }

    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    string exchange = 3;
    string order_id = 4;
    State state = 5;
    string pay_asset_id = 6;
    Asset pay_asset = 7;
    string fill_asset_id = 8;
    Asset fill_asset = 9;
    string funds = 10;
    string expects = 11;
    string filled_funds = 12;
    string filled_amount = 13;
    oneof extra {
        BinanceExtra binance = 14;
        FswapExtra fswap = 15;
    }
}

message Transfer {
    string trace_id = 1;
    string asset_id = 2;
    string amount = 3;
    string memo = 4;
    repeated string opponents = 5;
    uint32 threshold = 6;
    string url = 7;
}

message GetInfoRequest {}

message GetInfoResponse {
    Info info = 1;
}

message PreOrderRequest {
    Order.Type type = 1;
    string pay_asset_id = 2;
    string fill_asset_id = 3;
    string funds = 4;
    repeated string exchanges = 5;
    string filled_amount = 6;
}

message PreOrderResponse {
    Order order = 1;
    repeated Trade trades = 2;
    Transfer transfer = 3;
}

message CancelOrderRequest {
    string id = 1;
}

message CancelOrderResponse {
    Order order = 1;
}

message GetOrderRequest {
    string id = 1;
}

message GetOrderResponse {
    Order order = 1;
    repeated Trade trades = 2;
}

message ListOrdersRequest {
    Order.Type type = 1;
    Order.State state = 2;
    string cursor = 3;
    int32 limit = 4;
}

message ListOrdersResponse {
    repeated Order orders = 1;
    string next_cursor = 2;
    bool has_next = 3;
}

service TradingLabService {
    rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {}
    rpc PreOrder(PreOrderRequest) returns (PreOrderResponse) {}
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {}
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
    rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {}
}
