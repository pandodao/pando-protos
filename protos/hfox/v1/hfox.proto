syntax = "proto3";

package hfox.v1;
option go_package = "github.com/fox-one/pando-protos/hfox/v1;hfox";

message Asset {
    string id = 1;
    string symbol = 2;
    string name = 3;
    string logo = 4;
    string chain_id = 5;
    Asset chain = 6;
}

message Gem {
    message Base {
        string asset_id = 1;
        string quota = 2;
    }
    
    Base base = 1;
    Asset asset = 2;
    string paid = 3;
    string filled = 4;
}

message Plan {
    enum Status {
        STATUS_NOT_SET = 0;
        RUNNING = 1;
        STOPPED = 2;
        DELETED = 3;
    }

    string id = 1;
    string created_at = 2;
    string updated_at = 3;
    Status status = 4;
    string ticked_at = 5;
    string next_tick_at = 6;
    uint32 tick_number = 7;
    string name = 8;
    string user_id = 9;
    string period = 10;
    string pay_asset_id = 11;
    repeated Gem gems = 12;
}

message Tick {
    enum Type {
        TYPE_NOT_SET = 0;
        SCHEDULE = 1;
        MANUAL = 2;
    }

    enum Status {
        STATUS_NOT_SET = 0;
        PENDING = 1;
        EXPIRED = 2;
        CANCELLED = 3;
        HANDLED = 4;
        FILLED = 5;
        SETTLED = 6;
    }

    string id = 1; // trace id
    string created_at = 2;
    string updated_at = 3;
    string expired_at = 4;
    Type type = 5;
    Status status = 6;
    uint64 plan_id = 7;
    uint32 number = 8;
    repeated Gem gems = 9;
}

message Payment {
    string trace_id = 1;
    repeated string opponents = 2;
    uint32 threshold = 3;
    string asset_id = 4;
    string amount = 5;
    string memo = 6;
}

message CreatePlanRequest {
    string name = 1;
    string pay_asset_id = 2;
    string period = 3;
    repeated Gem.Base gems = 4;
}

message CreatePlanResponse {
    Plan plan = 1;
}

message UpdatePlanRequest {
    string id = 1;
    string name = 2;
    string pay_asset_id = 3;
    string period = 4;
    repeated Gem.Base gems = 5;
    Plan.Status status = 6;
}

message UpdatePlanResponse {
    Plan plan = 1;
}

message ListPlansRequest {}

message ListPlansResponse {
    repeated Plan plans = 1;
}

message CreateTickRequest {
    string plan_id = 1;
    repeated Gem gems = 2;
}

message CreateTickResponse {
    Plan plan = 1;
    Tick tick = 2;
    Payment payment = 3;
}

message FindTickRequest {
    string tick_id = 1;
}

message FindTickResponse {
    Plan plan = 1;
    Tick tick = 2;
    Payment payment = 3;
}

message CancelTickRequest {
    string tick_id = 1;
}

message CancelTickResponse {
    Plan plan = 1;
    Tick tick = 2;
}

message ListBalancesRequest {}

message Balance {
    string asset_id = 1;
    string amount = 2;
}

message ListBalancesResponse {
    repeated Balance balances = 1;
}

message Point {
    string date = 1;
    int64 ts = 2;
    string cost = 3;
    string filled = 4;
    string price = 5;
}

message ListStatsRequest {
    string plan_id = 1;
}

message ListStatsResponse {
    repeated Point points = 1;
}

message GetInfoRequest {}

message GetInfoResponse {
    string client_id = 1;
    repeated string pay_asset_ids = 2;
    string min_amount = 3;
    string max_amount = 4;
    repeated string fill_asset_ids = 5;
    repeated Asset pay_assets = 6;
    repeated Asset fill_assets = 7;
}

message RefreshStatRequest {
    string plan_id = 1;
}

message RefreshStatResponse {}

service HfoxService {
    rpc GetInfo(GetInfoRequest) returns (GetInfoResponse);
    rpc CreatePlan(CreatePlanRequest) returns (CreatePlanResponse);
    rpc UpdatePlan(UpdatePlanRequest) returns (UpdatePlanResponse);
    rpc ListPlans(ListPlansRequest) returns (ListPlansResponse);
    rpc CreateTick(CreateTickRequest) returns (CreateTickResponse);
    rpc FindTick(FindTickRequest) returns (FindTickResponse);
    rpc CancelTick(CancelTickRequest) returns (CancelTickResponse);
    rpc ListBalances(ListBalancesRequest) returns (ListBalancesResponse);
    rpc ListStats(ListStatsRequest) returns (ListStatsResponse);
    rpc RefreshStat(RefreshStatRequest) returns (RefreshStatResponse);
}
