syntax = "proto3";

package lend.v1; 
option go_package = "github.com/fox-one/pando-protos/lend/v1;lend";

service LendService {
    rpc Config(ConfigRequest) returns (ConfigResponse);
    rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse);

    // --- auth required

    rpc State(StateRequest) returns (StateResponse);
    rpc Info(InfoRequest) returns (InfoResponse);
    rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);
    rpc GetOperationLog(GetOperationLogRequest) returns (GetOperationLogResponse);
    rpc ListOperationLogs(ListOperationLogsRequest) returns (ListOperationLogsResponse);

    // for admin

    rpc GetLiquidation(GetLiquidationRequest) returns (GetLiquidationResponse);
}

enum OperationType {
  OPERATION_TYPE_NOT_SET = 0;
  PLEDGE = 1;
  WITHDRAW = 2;
  LOAN = 3;
  REPAY = 4;
  CANCEL = 5;

  // only as logs, created by system

  LIQUIDATION = 50;

  // --- by admins

  REVIEW = 100;
  CHARGE = 101;
}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":100,"params":["string:c94ac88f-4671-3976-b60a-09064f1811e8","bool:true","string:"]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQBkJGM5NGFjODhmLTQ2NzEtMzk3Ni1iNjBhLTA5MDY0ZjE4MTFlOAEAIu3B0g==

message ReviewData {
  string trace_id = 1;
  bool passed = 2;
  string failed_reason = 3;
}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":2,"params":["int8:3","string:c94ac88f-4671-3976-b60a-09064f1811e8","string:1"]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQACAyRjOTRhYzg4Zi00NjcxLTM5NzYtYjYwYS0wOTA2NGYxODExZTgBMWyJkn0=

message TransferWithdrawData {
  PledgeType pt = 1;
  string asset_id = 2;
  string amount = 3;
}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":1,"params":["int8:3"]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQABA88aOMo=

message TransferPledgeData {
  PledgeType pt = 1;
}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":3,"params":["string:1"]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQADATHU2Q9T

message TransferLoanData {
  string amount = 1;
}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":4,"params":[]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQAEcl7GMw==

message TransferRepayData {}

// mtgmemo -e '{"version":2,"protocol_id":6,"follow_id":"b3b4c09c-2421-41ec-b8d4-bdedfbbd58b1","action":5,"params":["string:12"]}' -b64 url
// AgYBs7TAnCQhQey41L3t-71YsQAFAjEyMRpxfA==

message TransferCancelData {
  string id = 1;
}

message ConfigRequest {}

message ConfigResponse {
  string security_pledge_rate = 1;
  string clearing_pledge_rate = 2;
  string interest_rate = 3;
  uint32 interest_duration = 4;
}

message Pagination {
  string next_cursor = 1;
  bool has_next = 2;
}

enum UserStatus {
  USER_STATUS_NOT_SET = 0;
  NORMAL = 1;
  LIQUIDATING = 2;
}

enum OperationStatus {
  OPERATION_STATUS_NOT_SET = 0;
  PENDING = 1;
  // only for LOAN operation
  QUEUED = 2;
  PROCESSING = 3;
  REVIEWING = 4;
  SUCCESS = 5;
  FAILED = 6;
  CANCELLED = 7;
}

enum PledgeType {
  PLEDGE_TYPE_NOT_SET = 0;
  NODE = 1;
  POOL = 2;
  LOCAL = 3;
}

message Asset {
  string asset_id = 1;
  string chain_id = 2;
  string symbol = 3;
  string name = 4;
  string logo = 5;
  string price = 6;
  int32  price_at = 7;
  string pledge_rate = 8;
}

message ListAssetsRequest {}

message ListAssetsResponse {
  repeated Asset assets = 1;
}

message PledgeItem {
  Asset asset = 1;
  string amount = 2;
  string name = 3;
}

message PledgeGroup {
  PledgeType pledge_type = 1;
  bool active = 2;
  repeated PledgeItem items = 3;
}

message StateRequest {
  uint64 operation_id = 1;
}

message StateResponse {
  string loan_amount_queued = 1;
}

message InfoRequest {}

message InfoResponse {
  string loan_amount = 1;
  repeated PledgeGroup groups = 2;
  string loan_limit = 3;
  UserStatus user_status = 4;
}

message CreatePaymentRequest {
  string trace_id = 1;
  string memo = 2;
  string asset_id = 3;
  string amount = 4;
}

message CreatePaymentResponse {
  string code = 1;
}

message GetOperationLogRequest {
  string trace_id = 1;
}

message OperationLog {
  uint64 id = 17;
  string trace_id = 1;
  OperationType operation_type = 2;
  string loan_amount = 3;
  string repay_amount = 4;
  PledgeType pledge_type = 5;
  string pledge_amount = 6;
  Asset pledge_asset = 7;
  OperationStatus status = 8;
  int32 created_at = 9;
  string failed_reason = 10;
  string transfer_memo = 11;
  string transfer_asset_id = 12;
  string transfer_amount = 13;
  bool is_system = 14;
  string before_loan_amount = 15;
  string after_loan_amount = 16;
}

message GetOperationLogResponse {
  OperationLog operation_log = 1;
}

message ListOperationLogsRequest {
  int64 cursor = 1;
  int64 limit = 2;
}

message ListOperationLogsResponse {
  repeated OperationLog operation_logs = 1;
  Pagination pagination = 2;
}

message GetLiquidationRequest {
  string trace_id = 1;
}

message LiquidationPledge {
  int64 id = 1;
  string user_id = 2;
  PledgeType type = 3;
  string asset_id = 4;
  string amount = 5;
  string contract_id = 6;
  string name = 7;
  string trace_id = 8;
  string asset_price = 9;
  uint32 asset_price_updated_at = 10;
  bool done = 11;
  uint32 created_at = 12;
}

message GetLiquidationResponse {
  OperationLog op = 1;
  repeated LiquidationPledge pledges = 2;
}
