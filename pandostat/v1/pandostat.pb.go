// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: pandostat/v1/pandostat.proto

package pandostat

import (
	v1 "github.com/fox-one/pando-protos/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeRange int32

const (
	TimeRange_TIME_RANGE_NOT_SET TimeRange = 0
	TimeRange_DAY                TimeRange = 1
	TimeRange_WEEK               TimeRange = 2
	TimeRange_MONTH              TimeRange = 3
	TimeRange_HARF_YEAR          TimeRange = 4
	TimeRange_YEAR               TimeRange = 5
)

// Enum value maps for TimeRange.
var (
	TimeRange_name = map[int32]string{
		0: "TIME_RANGE_NOT_SET",
		1: "DAY",
		2: "WEEK",
		3: "MONTH",
		4: "HARF_YEAR",
		5: "YEAR",
	}
	TimeRange_value = map[string]int32{
		"TIME_RANGE_NOT_SET": 0,
		"DAY":                1,
		"WEEK":               2,
		"MONTH":              3,
		"HARF_YEAR":          4,
		"YEAR":               5,
	}
)

func (x TimeRange) Enum() *TimeRange {
	p := new(TimeRange)
	*p = x
	return p
}

func (x TimeRange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeRange) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[0].Descriptor()
}

func (TimeRange) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[0]
}

func (x TimeRange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeRange.Descriptor instead.
func (TimeRange) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{0}
}

type OverviewChartType int32

const (
	OverviewChartType_TYPE_NOT_SET OverviewChartType = 0
	// leaf
	OverviewChartType_LEAF_SUPPLY     OverviewChartType = 1
	OverviewChartType_LEAF_COLLATERAL OverviewChartType = 2
	// rings
	OverviewChartType_RINGS_SUPPLY OverviewChartType = 21
	OverviewChartType_RINGS_BORROW OverviewChartType = 22
	// fswap
	OverviewChartType_FSWAP_LIQUIDITY OverviewChartType = 41
	OverviewChartType_FSWAP_VOLUME    OverviewChartType = 42
	// lake
	OverviewChartType_LAKE_LIQUIDITY OverviewChartType = 61
	OverviewChartType_LAKE_VOLUME    OverviewChartType = 62
)

// Enum value maps for OverviewChartType.
var (
	OverviewChartType_name = map[int32]string{
		0:  "TYPE_NOT_SET",
		1:  "LEAF_SUPPLY",
		2:  "LEAF_COLLATERAL",
		21: "RINGS_SUPPLY",
		22: "RINGS_BORROW",
		41: "FSWAP_LIQUIDITY",
		42: "FSWAP_VOLUME",
		61: "LAKE_LIQUIDITY",
		62: "LAKE_VOLUME",
	}
	OverviewChartType_value = map[string]int32{
		"TYPE_NOT_SET":    0,
		"LEAF_SUPPLY":     1,
		"LEAF_COLLATERAL": 2,
		"RINGS_SUPPLY":    21,
		"RINGS_BORROW":    22,
		"FSWAP_LIQUIDITY": 41,
		"FSWAP_VOLUME":    42,
		"LAKE_LIQUIDITY":  61,
		"LAKE_VOLUME":     62,
	}
)

func (x OverviewChartType) Enum() *OverviewChartType {
	p := new(OverviewChartType)
	*p = x
	return p
}

func (x OverviewChartType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OverviewChartType) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[1].Descriptor()
}

func (OverviewChartType) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[1]
}

func (x OverviewChartType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OverviewChartType.Descriptor instead.
func (OverviewChartType) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{1}
}

type FswapAssetStatisticsRequest_FswapAssetChartType int32

const (
	FswapAssetStatisticsRequest_TYPE_NOT_SET    FswapAssetStatisticsRequest_FswapAssetChartType = 0
	FswapAssetStatisticsRequest_FSWAP_LIQUIDITY FswapAssetStatisticsRequest_FswapAssetChartType = 1
	FswapAssetStatisticsRequest_FSWAP_VOLUME    FswapAssetStatisticsRequest_FswapAssetChartType = 2
	FswapAssetStatisticsRequest_FSWAP_PRICE     FswapAssetStatisticsRequest_FswapAssetChartType = 3
)

// Enum value maps for FswapAssetStatisticsRequest_FswapAssetChartType.
var (
	FswapAssetStatisticsRequest_FswapAssetChartType_name = map[int32]string{
		0: "TYPE_NOT_SET",
		1: "FSWAP_LIQUIDITY",
		2: "FSWAP_VOLUME",
		3: "FSWAP_PRICE",
	}
	FswapAssetStatisticsRequest_FswapAssetChartType_value = map[string]int32{
		"TYPE_NOT_SET":    0,
		"FSWAP_LIQUIDITY": 1,
		"FSWAP_VOLUME":    2,
		"FSWAP_PRICE":     3,
	}
)

func (x FswapAssetStatisticsRequest_FswapAssetChartType) Enum() *FswapAssetStatisticsRequest_FswapAssetChartType {
	p := new(FswapAssetStatisticsRequest_FswapAssetChartType)
	*p = x
	return p
}

func (x FswapAssetStatisticsRequest_FswapAssetChartType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FswapAssetStatisticsRequest_FswapAssetChartType) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[2].Descriptor()
}

func (FswapAssetStatisticsRequest_FswapAssetChartType) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[2]
}

func (x FswapAssetStatisticsRequest_FswapAssetChartType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FswapAssetStatisticsRequest_FswapAssetChartType.Descriptor instead.
func (FswapAssetStatisticsRequest_FswapAssetChartType) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{14, 0}
}

type LeafCollateralStatisticsRequest_CollateralChartType int32

const (
	LeafCollateralStatisticsRequest_TYPE_NOT_SET           LeafCollateralStatisticsRequest_CollateralChartType = 0
	LeafCollateralStatisticsRequest_LEAF_SUPPLY            LeafCollateralStatisticsRequest_CollateralChartType = 1
	LeafCollateralStatisticsRequest_LEAF_MAX_AVAILABLE     LeafCollateralStatisticsRequest_CollateralChartType = 2
	LeafCollateralStatisticsRequest_LEAF_LIQUIDATION_PRICE LeafCollateralStatisticsRequest_CollateralChartType = 3
)

// Enum value maps for LeafCollateralStatisticsRequest_CollateralChartType.
var (
	LeafCollateralStatisticsRequest_CollateralChartType_name = map[int32]string{
		0: "TYPE_NOT_SET",
		1: "LEAF_SUPPLY",
		2: "LEAF_MAX_AVAILABLE",
		3: "LEAF_LIQUIDATION_PRICE",
	}
	LeafCollateralStatisticsRequest_CollateralChartType_value = map[string]int32{
		"TYPE_NOT_SET":           0,
		"LEAF_SUPPLY":            1,
		"LEAF_MAX_AVAILABLE":     2,
		"LEAF_LIQUIDATION_PRICE": 3,
	}
)

func (x LeafCollateralStatisticsRequest_CollateralChartType) Enum() *LeafCollateralStatisticsRequest_CollateralChartType {
	p := new(LeafCollateralStatisticsRequest_CollateralChartType)
	*p = x
	return p
}

func (x LeafCollateralStatisticsRequest_CollateralChartType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeafCollateralStatisticsRequest_CollateralChartType) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[3].Descriptor()
}

func (LeafCollateralStatisticsRequest_CollateralChartType) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[3]
}

func (x LeafCollateralStatisticsRequest_CollateralChartType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeafCollateralStatisticsRequest_CollateralChartType.Descriptor instead.
func (LeafCollateralStatisticsRequest_CollateralChartType) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{21, 0}
}

type LeafMintTokenStatisticsRequest_MintTokenChartType int32

const (
	LeafMintTokenStatisticsRequest_TYPE_NOT_SET LeafMintTokenStatisticsRequest_MintTokenChartType = 0
	LeafMintTokenStatisticsRequest_LEAF_MINTED  LeafMintTokenStatisticsRequest_MintTokenChartType = 1
	LeafMintTokenStatisticsRequest_LEAF_BURNED  LeafMintTokenStatisticsRequest_MintTokenChartType = 2
)

// Enum value maps for LeafMintTokenStatisticsRequest_MintTokenChartType.
var (
	LeafMintTokenStatisticsRequest_MintTokenChartType_name = map[int32]string{
		0: "TYPE_NOT_SET",
		1: "LEAF_MINTED",
		2: "LEAF_BURNED",
	}
	LeafMintTokenStatisticsRequest_MintTokenChartType_value = map[string]int32{
		"TYPE_NOT_SET": 0,
		"LEAF_MINTED":  1,
		"LEAF_BURNED":  2,
	}
)

func (x LeafMintTokenStatisticsRequest_MintTokenChartType) Enum() *LeafMintTokenStatisticsRequest_MintTokenChartType {
	p := new(LeafMintTokenStatisticsRequest_MintTokenChartType)
	*p = x
	return p
}

func (x LeafMintTokenStatisticsRequest_MintTokenChartType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeafMintTokenStatisticsRequest_MintTokenChartType) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[4].Descriptor()
}

func (LeafMintTokenStatisticsRequest_MintTokenChartType) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[4]
}

func (x LeafMintTokenStatisticsRequest_MintTokenChartType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeafMintTokenStatisticsRequest_MintTokenChartType.Descriptor instead.
func (LeafMintTokenStatisticsRequest_MintTokenChartType) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{25, 0}
}

type RingsMarketStatisticsRequest_MarketChartType int32

const (
	RingsMarketStatisticsRequest_TYPE_NOT_SET        RingsMarketStatisticsRequest_MarketChartType = 0
	RingsMarketStatisticsRequest_RINGS_SUPPLY_APY    RingsMarketStatisticsRequest_MarketChartType = 1
	RingsMarketStatisticsRequest_RINGS_SUPPLY_VOLUME RingsMarketStatisticsRequest_MarketChartType = 2
	RingsMarketStatisticsRequest_RINGS_BORROW_APY    RingsMarketStatisticsRequest_MarketChartType = 3
	RingsMarketStatisticsRequest_RINGS_BORROW_VOLUME RingsMarketStatisticsRequest_MarketChartType = 4
)

// Enum value maps for RingsMarketStatisticsRequest_MarketChartType.
var (
	RingsMarketStatisticsRequest_MarketChartType_name = map[int32]string{
		0: "TYPE_NOT_SET",
		1: "RINGS_SUPPLY_APY",
		2: "RINGS_SUPPLY_VOLUME",
		3: "RINGS_BORROW_APY",
		4: "RINGS_BORROW_VOLUME",
	}
	RingsMarketStatisticsRequest_MarketChartType_value = map[string]int32{
		"TYPE_NOT_SET":        0,
		"RINGS_SUPPLY_APY":    1,
		"RINGS_SUPPLY_VOLUME": 2,
		"RINGS_BORROW_APY":    3,
		"RINGS_BORROW_VOLUME": 4,
	}
)

func (x RingsMarketStatisticsRequest_MarketChartType) Enum() *RingsMarketStatisticsRequest_MarketChartType {
	p := new(RingsMarketStatisticsRequest_MarketChartType)
	*p = x
	return p
}

func (x RingsMarketStatisticsRequest_MarketChartType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RingsMarketStatisticsRequest_MarketChartType) Descriptor() protoreflect.EnumDescriptor {
	return file_pandostat_v1_pandostat_proto_enumTypes[5].Descriptor()
}

func (RingsMarketStatisticsRequest_MarketChartType) Type() protoreflect.EnumType {
	return &file_pandostat_v1_pandostat_proto_enumTypes[5]
}

func (x RingsMarketStatisticsRequest_MarketChartType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RingsMarketStatisticsRequest_MarketChartType.Descriptor instead.
func (RingsMarketStatisticsRequest_MarketChartType) EnumDescriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{30, 0}
}

type ListAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*v1.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{0}
}

func (x *ListAssetsRequest) GetAssets() []*v1.Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type ListAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*v1.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{1}
}

func (x *ListAssetsResponse) GetAssets() []*v1.Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type ChartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	V  string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	Ts uint32 `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *ChartData) Reset() {
	*x = ChartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartData) ProtoMessage() {}

func (x *ChartData) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartData.ProtoReflect.Descriptor instead.
func (*ChartData) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{2}
}

func (x *ChartData) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *ChartData) GetTs() uint32 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type StatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  OverviewChartType `protobuf:"varint,1,opt,name=type,proto3,enum=pandostat.v1.OverviewChartType" json:"type,omitempty"`
	Range TimeRange         `protobuf:"varint,2,opt,name=range,proto3,enum=pandostat.v1.TimeRange" json:"range,omitempty"`
}

func (x *StatisticsRequest) Reset() {
	*x = StatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsRequest) ProtoMessage() {}

func (x *StatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsRequest.ProtoReflect.Descriptor instead.
func (*StatisticsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{3}
}

func (x *StatisticsRequest) GetType() OverviewChartType {
	if x != nil {
		return x.Type
	}
	return OverviewChartType_TYPE_NOT_SET
}

func (x *StatisticsRequest) GetRange() TimeRange {
	if x != nil {
		return x.Range
	}
	return TimeRange_TIME_RANGE_NOT_SET
}

type StatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ChartData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *StatisticsResponse) Reset() {
	*x = StatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsResponse) ProtoMessage() {}

func (x *StatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsResponse.ProtoReflect.Descriptor instead.
func (*StatisticsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{4}
}

func (x *StatisticsResponse) GetData() []*ChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ----------  4SWAP     -----------
type FswapStatsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FswapStatsInfoRequest) Reset() {
	*x = FswapStatsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapStatsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapStatsInfoRequest) ProtoMessage() {}

func (x *FswapStatsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapStatsInfoRequest.ProtoReflect.Descriptor instead.
func (*FswapStatsInfoRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{5}
}

type FswapStatsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume_24H   string `protobuf:"bytes,1,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	Fee_24H      string `protobuf:"bytes,2,opt,name=fee_24h,json=fee24h,proto3" json:"fee_24h,omitempty"`
	Trades_24H   string `protobuf:"bytes,3,opt,name=trades_24h,json=trades24h,proto3" json:"trades_24h,omitempty"`
	TurnOver_24H string `protobuf:"bytes,4,opt,name=turn_over_24h,json=turnOver24h,proto3" json:"turn_over_24h,omitempty"`
}

func (x *FswapStatsInfoResponse) Reset() {
	*x = FswapStatsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapStatsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapStatsInfoResponse) ProtoMessage() {}

func (x *FswapStatsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapStatsInfoResponse.ProtoReflect.Descriptor instead.
func (*FswapStatsInfoResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{6}
}

func (x *FswapStatsInfoResponse) GetVolume_24H() string {
	if x != nil {
		return x.Volume_24H
	}
	return ""
}

func (x *FswapStatsInfoResponse) GetFee_24H() string {
	if x != nil {
		return x.Fee_24H
	}
	return ""
}

func (x *FswapStatsInfoResponse) GetTrades_24H() string {
	if x != nil {
		return x.Trades_24H
	}
	return ""
}

func (x *FswapStatsInfoResponse) GetTurnOver_24H() string {
	if x != nil {
		return x.TurnOver_24H
	}
	return ""
}

type FswapAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FswapAssetsRequest) Reset() {
	*x = FswapAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetsRequest) ProtoMessage() {}

func (x *FswapAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetsRequest.ProtoReflect.Descriptor instead.
func (*FswapAssetsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{7}
}

type FswapAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // asset id
	Liquidity  string `protobuf:"bytes,2,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Volume     string `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Volume_24H string `protobuf:"bytes,4,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	Volume_7D  string `protobuf:"bytes,5,opt,name=volume_7d,json=volume7d,proto3" json:"volume_7d,omitempty"`
	Trades     string `protobuf:"bytes,6,opt,name=trades,proto3" json:"trades,omitempty"`
}

func (x *FswapAsset) Reset() {
	*x = FswapAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAsset) ProtoMessage() {}

func (x *FswapAsset) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAsset.ProtoReflect.Descriptor instead.
func (*FswapAsset) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{8}
}

func (x *FswapAsset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FswapAsset) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *FswapAsset) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *FswapAsset) GetVolume_24H() string {
	if x != nil {
		return x.Volume_24H
	}
	return ""
}

func (x *FswapAsset) GetVolume_7D() string {
	if x != nil {
		return x.Volume_7D
	}
	return ""
}

func (x *FswapAsset) GetTrades() string {
	if x != nil {
		return x.Trades
	}
	return ""
}

type FswapAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*FswapAsset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *FswapAssetsResponse) Reset() {
	*x = FswapAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetsResponse) ProtoMessage() {}

func (x *FswapAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetsResponse.ProtoReflect.Descriptor instead.
func (*FswapAssetsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{9}
}

func (x *FswapAssetsResponse) GetAssets() []*FswapAsset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type FswapAssetVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *FswapAssetVolumeRequest) Reset() {
	*x = FswapAssetVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetVolumeRequest) ProtoMessage() {}

func (x *FswapAssetVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetVolumeRequest.ProtoReflect.Descriptor instead.
func (*FswapAssetVolumeRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{10}
}

func (x *FswapAssetVolumeRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type FswapAssetVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []*ChartData `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *FswapAssetVolumeResponse) Reset() {
	*x = FswapAssetVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetVolumeResponse) ProtoMessage() {}

func (x *FswapAssetVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetVolumeResponse.ProtoReflect.Descriptor instead.
func (*FswapAssetVolumeResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{11}
}

func (x *FswapAssetVolumeResponse) GetVolumes() []*ChartData {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type FswapAssetDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *FswapAssetDetailRequest) Reset() {
	*x = FswapAssetDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetDetailRequest) ProtoMessage() {}

func (x *FswapAssetDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetDetailRequest.ProtoReflect.Descriptor instead.
func (*FswapAssetDetailRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{12}
}

func (x *FswapAssetDetailRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type FswapAssetDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price       string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	TotalSupply string `protobuf:"bytes,2,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	MarketCap   string `protobuf:"bytes,3,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"`
	Volume_24H  string `protobuf:"bytes,4,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	Trades_24H  string `protobuf:"bytes,5,opt,name=trades_24h,json=trades24h,proto3" json:"trades_24h,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Website     string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	IssueTime   uint32 `protobuf:"varint,8,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
}

func (x *FswapAssetDetailResponse) Reset() {
	*x = FswapAssetDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetDetailResponse) ProtoMessage() {}

func (x *FswapAssetDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetDetailResponse.ProtoReflect.Descriptor instead.
func (*FswapAssetDetailResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{13}
}

func (x *FswapAssetDetailResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetMarketCap() string {
	if x != nil {
		return x.MarketCap
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetVolume_24H() string {
	if x != nil {
		return x.Volume_24H
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetTrades_24H() string {
	if x != nil {
		return x.Trades_24H
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *FswapAssetDetailResponse) GetIssueTime() uint32 {
	if x != nil {
		return x.IssueTime
	}
	return 0
}

type FswapAssetStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    FswapAssetStatisticsRequest_FswapAssetChartType `protobuf:"varint,1,opt,name=type,proto3,enum=pandostat.v1.FswapAssetStatisticsRequest_FswapAssetChartType" json:"type,omitempty"`
	Range   TimeRange                                       `protobuf:"varint,2,opt,name=range,proto3,enum=pandostat.v1.TimeRange" json:"range,omitempty"`
	AssetId string                                          `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *FswapAssetStatisticsRequest) Reset() {
	*x = FswapAssetStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetStatisticsRequest) ProtoMessage() {}

func (x *FswapAssetStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetStatisticsRequest.ProtoReflect.Descriptor instead.
func (*FswapAssetStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{14}
}

func (x *FswapAssetStatisticsRequest) GetType() FswapAssetStatisticsRequest_FswapAssetChartType {
	if x != nil {
		return x.Type
	}
	return FswapAssetStatisticsRequest_TYPE_NOT_SET
}

func (x *FswapAssetStatisticsRequest) GetRange() TimeRange {
	if x != nil {
		return x.Range
	}
	return TimeRange_TIME_RANGE_NOT_SET
}

func (x *FswapAssetStatisticsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type FswapAssetStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ChartData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FswapAssetStatisticsResponse) Reset() {
	*x = FswapAssetStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FswapAssetStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FswapAssetStatisticsResponse) ProtoMessage() {}

func (x *FswapAssetStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FswapAssetStatisticsResponse.ProtoReflect.Descriptor instead.
func (*FswapAssetStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{15}
}

func (x *FswapAssetStatisticsResponse) GetData() []*ChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ----------  LEAF     -----------
type LeafCollateralsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeafCollateralsRequest) Reset() {
	*x = LeafCollateralsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralsRequest) ProtoMessage() {}

func (x *LeafCollateralsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralsRequest.ProtoReflect.Descriptor instead.
func (*LeafCollateralsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{16}
}

type LeafCollateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // this collateral id
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CollateralAssetId string `protobuf:"bytes,3,opt,name=collateral_asset_id,json=collateralAssetId,proto3" json:"collateral_asset_id,omitempty"` // the collateral asset id
	DebtAssetId       string `protobuf:"bytes,4,opt,name=debt_asset_id,json=debtAssetId,proto3" json:"debt_asset_id,omitempty"`
	// supply
	TotalSupply string `protobuf:"bytes,5,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	Supply_24H  string `protobuf:"bytes,6,opt,name=supply_24h,json=supply24h,proto3" json:"supply_24h,omitempty"`
	Supply_7D   string `protobuf:"bytes,7,opt,name=supply_7d,json=supply7d,proto3" json:"supply_7d,omitempty"`
	// minted
	TotalMinted string `protobuf:"bytes,8,opt,name=total_minted,json=totalMinted,proto3" json:"total_minted,omitempty"`
	Minted_24H  string `protobuf:"bytes,9,opt,name=minted_24h,json=minted24h,proto3" json:"minted_24h,omitempty"`
	Minted_7D   string `protobuf:"bytes,10,opt,name=minted_7d,json=minted7d,proto3" json:"minted_7d,omitempty"`
	// other info
	Price              string `protobuf:"bytes,11,opt,name=price,proto3" json:"price,omitempty"`
	MinCollateralRatio string `protobuf:"bytes,12,opt,name=min_collateral_ratio,json=minCollateralRatio,proto3" json:"min_collateral_ratio,omitempty"`
	StabilityFee       string `protobuf:"bytes,13,opt,name=stability_fee,json=stabilityFee,proto3" json:"stability_fee,omitempty"`
}

func (x *LeafCollateral) Reset() {
	*x = LeafCollateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateral) ProtoMessage() {}

func (x *LeafCollateral) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateral.ProtoReflect.Descriptor instead.
func (*LeafCollateral) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{17}
}

func (x *LeafCollateral) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LeafCollateral) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeafCollateral) GetCollateralAssetId() string {
	if x != nil {
		return x.CollateralAssetId
	}
	return ""
}

func (x *LeafCollateral) GetDebtAssetId() string {
	if x != nil {
		return x.DebtAssetId
	}
	return ""
}

func (x *LeafCollateral) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *LeafCollateral) GetSupply_24H() string {
	if x != nil {
		return x.Supply_24H
	}
	return ""
}

func (x *LeafCollateral) GetSupply_7D() string {
	if x != nil {
		return x.Supply_7D
	}
	return ""
}

func (x *LeafCollateral) GetTotalMinted() string {
	if x != nil {
		return x.TotalMinted
	}
	return ""
}

func (x *LeafCollateral) GetMinted_24H() string {
	if x != nil {
		return x.Minted_24H
	}
	return ""
}

func (x *LeafCollateral) GetMinted_7D() string {
	if x != nil {
		return x.Minted_7D
	}
	return ""
}

func (x *LeafCollateral) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LeafCollateral) GetMinCollateralRatio() string {
	if x != nil {
		return x.MinCollateralRatio
	}
	return ""
}

func (x *LeafCollateral) GetStabilityFee() string {
	if x != nil {
		return x.StabilityFee
	}
	return ""
}

type LeafCollateralsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collaterals []*LeafCollateral `protobuf:"bytes,1,rep,name=collaterals,proto3" json:"collaterals,omitempty"`
}

func (x *LeafCollateralsResponse) Reset() {
	*x = LeafCollateralsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralsResponse) ProtoMessage() {}

func (x *LeafCollateralsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralsResponse.ProtoReflect.Descriptor instead.
func (*LeafCollateralsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{18}
}

func (x *LeafCollateralsResponse) GetCollaterals() []*LeafCollateral {
	if x != nil {
		return x.Collaterals
	}
	return nil
}

type LeafCollateralDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollateralId string `protobuf:"bytes,1,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
}

func (x *LeafCollateralDetailRequest) Reset() {
	*x = LeafCollateralDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralDetailRequest) ProtoMessage() {}

func (x *LeafCollateralDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralDetailRequest.ProtoReflect.Descriptor instead.
func (*LeafCollateralDetailRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{19}
}

func (x *LeafCollateralDetailRequest) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

type LeafCollateralDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// supply is deposit asset
	TotalSupply  string `protobuf:"bytes,2,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	MaxAvailable string `protobuf:"bytes,3,opt,name=max_available,json=maxAvailable,proto3" json:"max_available,omitempty"`
	// minted is debt asset, eg: pUSD Debt
	TotalMinted string `protobuf:"bytes,4,opt,name=total_minted,json=totalMinted,proto3" json:"total_minted,omitempty"`
	// other info
	StabilityFee       string `protobuf:"bytes,5,opt,name=stability_fee,json=stabilityFee,proto3" json:"stability_fee,omitempty"`
	CollateralRatio    string `protobuf:"bytes,6,opt,name=collateral_ratio,json=collateralRatio,proto3" json:"collateral_ratio,omitempty"`
	MinCollateralRatio string `protobuf:"bytes,7,opt,name=min_collateral_ratio,json=minCollateralRatio,proto3" json:"min_collateral_ratio,omitempty"`
	// price oracle
	NextPrice string `protobuf:"bytes,8,opt,name=next_price,json=nextPrice,proto3" json:"next_price,omitempty"`
	PeekAt    uint32 `protobuf:"varint,9,opt,name=peek_at,json=peekAt,proto3" json:"peek_at,omitempty"`
}

func (x *LeafCollateralDetailResponse) Reset() {
	*x = LeafCollateralDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralDetailResponse) ProtoMessage() {}

func (x *LeafCollateralDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralDetailResponse.ProtoReflect.Descriptor instead.
func (*LeafCollateralDetailResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{20}
}

func (x *LeafCollateralDetailResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetMaxAvailable() string {
	if x != nil {
		return x.MaxAvailable
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetTotalMinted() string {
	if x != nil {
		return x.TotalMinted
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetStabilityFee() string {
	if x != nil {
		return x.StabilityFee
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetCollateralRatio() string {
	if x != nil {
		return x.CollateralRatio
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetMinCollateralRatio() string {
	if x != nil {
		return x.MinCollateralRatio
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetNextPrice() string {
	if x != nil {
		return x.NextPrice
	}
	return ""
}

func (x *LeafCollateralDetailResponse) GetPeekAt() uint32 {
	if x != nil {
		return x.PeekAt
	}
	return 0
}

type LeafCollateralStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         LeafCollateralStatisticsRequest_CollateralChartType `protobuf:"varint,1,opt,name=type,proto3,enum=pandostat.v1.LeafCollateralStatisticsRequest_CollateralChartType" json:"type,omitempty"`
	Range        TimeRange                                           `protobuf:"varint,2,opt,name=range,proto3,enum=pandostat.v1.TimeRange" json:"range,omitempty"`
	CollateralId string                                              `protobuf:"bytes,3,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
}

func (x *LeafCollateralStatisticsRequest) Reset() {
	*x = LeafCollateralStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralStatisticsRequest) ProtoMessage() {}

func (x *LeafCollateralStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralStatisticsRequest.ProtoReflect.Descriptor instead.
func (*LeafCollateralStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{21}
}

func (x *LeafCollateralStatisticsRequest) GetType() LeafCollateralStatisticsRequest_CollateralChartType {
	if x != nil {
		return x.Type
	}
	return LeafCollateralStatisticsRequest_TYPE_NOT_SET
}

func (x *LeafCollateralStatisticsRequest) GetRange() TimeRange {
	if x != nil {
		return x.Range
	}
	return TimeRange_TIME_RANGE_NOT_SET
}

func (x *LeafCollateralStatisticsRequest) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

type LeafCollateralStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ChartData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LeafCollateralStatisticsResponse) Reset() {
	*x = LeafCollateralStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafCollateralStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafCollateralStatisticsResponse) ProtoMessage() {}

func (x *LeafCollateralStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafCollateralStatisticsResponse.ProtoReflect.Descriptor instead.
func (*LeafCollateralStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{22}
}

func (x *LeafCollateralStatisticsResponse) GetData() []*ChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LeafMintTokenDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *LeafMintTokenDetailRequest) Reset() {
	*x = LeafMintTokenDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafMintTokenDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafMintTokenDetailRequest) ProtoMessage() {}

func (x *LeafMintTokenDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafMintTokenDetailRequest.ProtoReflect.Descriptor instead.
func (*LeafMintTokenDetailRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{23}
}

func (x *LeafMintTokenDetailRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type LeafMintTokenDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price            string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Minted_24H       string `protobuf:"bytes,2,opt,name=minted_24h,json=minted24h,proto3" json:"minted_24h,omitempty"`
	Burned_24H       string `protobuf:"bytes,3,opt,name=burned_24h,json=burned24h,proto3" json:"burned_24h,omitempty"`
	Volume_24H       string `protobuf:"bytes,4,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	MintedTrades_24H string `protobuf:"bytes,5,opt,name=minted_trades_24h,json=mintedTrades24h,proto3" json:"minted_trades_24h,omitempty"`
	BurnedTrades_24H string `protobuf:"bytes,6,opt,name=burned_trades_24h,json=burnedTrades24h,proto3" json:"burned_trades_24h,omitempty"`
	VolumeTrades_24H string `protobuf:"bytes,7,opt,name=volume_trades_24h,json=volumeTrades24h,proto3" json:"volume_trades_24h,omitempty"`
	Description      string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Website          string `protobuf:"bytes,9,opt,name=website,proto3" json:"website,omitempty"`
	IssueTime        uint32 `protobuf:"varint,10,opt,name=issue_time,json=issueTime,proto3" json:"issue_time,omitempty"`
}

func (x *LeafMintTokenDetailResponse) Reset() {
	*x = LeafMintTokenDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafMintTokenDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafMintTokenDetailResponse) ProtoMessage() {}

func (x *LeafMintTokenDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafMintTokenDetailResponse.ProtoReflect.Descriptor instead.
func (*LeafMintTokenDetailResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{24}
}

func (x *LeafMintTokenDetailResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetMinted_24H() string {
	if x != nil {
		return x.Minted_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetBurned_24H() string {
	if x != nil {
		return x.Burned_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetVolume_24H() string {
	if x != nil {
		return x.Volume_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetMintedTrades_24H() string {
	if x != nil {
		return x.MintedTrades_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetBurnedTrades_24H() string {
	if x != nil {
		return x.BurnedTrades_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetVolumeTrades_24H() string {
	if x != nil {
		return x.VolumeTrades_24H
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *LeafMintTokenDetailResponse) GetIssueTime() uint32 {
	if x != nil {
		return x.IssueTime
	}
	return 0
}

type LeafMintTokenStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    LeafMintTokenStatisticsRequest_MintTokenChartType `protobuf:"varint,1,opt,name=type,proto3,enum=pandostat.v1.LeafMintTokenStatisticsRequest_MintTokenChartType" json:"type,omitempty"`
	Range   TimeRange                                         `protobuf:"varint,2,opt,name=range,proto3,enum=pandostat.v1.TimeRange" json:"range,omitempty"`
	AssetId string                                            `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *LeafMintTokenStatisticsRequest) Reset() {
	*x = LeafMintTokenStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafMintTokenStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafMintTokenStatisticsRequest) ProtoMessage() {}

func (x *LeafMintTokenStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafMintTokenStatisticsRequest.ProtoReflect.Descriptor instead.
func (*LeafMintTokenStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{25}
}

func (x *LeafMintTokenStatisticsRequest) GetType() LeafMintTokenStatisticsRequest_MintTokenChartType {
	if x != nil {
		return x.Type
	}
	return LeafMintTokenStatisticsRequest_TYPE_NOT_SET
}

func (x *LeafMintTokenStatisticsRequest) GetRange() TimeRange {
	if x != nil {
		return x.Range
	}
	return TimeRange_TIME_RANGE_NOT_SET
}

func (x *LeafMintTokenStatisticsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type LeafMintTokenStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ChartData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LeafMintTokenStatisticsResponse) Reset() {
	*x = LeafMintTokenStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeafMintTokenStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeafMintTokenStatisticsResponse) ProtoMessage() {}

func (x *LeafMintTokenStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeafMintTokenStatisticsResponse.ProtoReflect.Descriptor instead.
func (*LeafMintTokenStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{26}
}

func (x *LeafMintTokenStatisticsResponse) GetData() []*ChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

// ----------  RINGS    -----------
type RingsAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RingsAssetsRequest) Reset() {
	*x = RingsAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsAssetsRequest) ProtoMessage() {}

func (x *RingsAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsAssetsRequest.ProtoReflect.Descriptor instead.
func (*RingsAssetsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{27}
}

type RingsAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SupplyApy   string `protobuf:"bytes,2,opt,name=supply_apy,json=supplyApy,proto3" json:"supply_apy,omitempty"`
	TotalSupply string `protobuf:"bytes,3,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	Supply_24H  string `protobuf:"bytes,4,opt,name=supply_24h,json=supply24h,proto3" json:"supply_24h,omitempty"`
	Supply_7D   string `protobuf:"bytes,5,opt,name=supply_7d,json=supply7d,proto3" json:"supply_7d,omitempty"`
	Suppliers   string `protobuf:"bytes,6,opt,name=suppliers,proto3" json:"suppliers,omitempty"`
	BorrowApy   string `protobuf:"bytes,7,opt,name=borrow_apy,json=borrowApy,proto3" json:"borrow_apy,omitempty"`
	TotalBorrow string `protobuf:"bytes,8,opt,name=total_borrow,json=totalBorrow,proto3" json:"total_borrow,omitempty"`
	Borrow_24H  string `protobuf:"bytes,9,opt,name=borrow_24h,json=borrow24h,proto3" json:"borrow_24h,omitempty"`
	Borrow_7D   string `protobuf:"bytes,10,opt,name=borrow_7d,json=borrow7d,proto3" json:"borrow_7d,omitempty"`
	Borrowers   string `protobuf:"bytes,11,opt,name=borrowers,proto3" json:"borrowers,omitempty"`
}

func (x *RingsAsset) Reset() {
	*x = RingsAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsAsset) ProtoMessage() {}

func (x *RingsAsset) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsAsset.ProtoReflect.Descriptor instead.
func (*RingsAsset) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{28}
}

func (x *RingsAsset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RingsAsset) GetSupplyApy() string {
	if x != nil {
		return x.SupplyApy
	}
	return ""
}

func (x *RingsAsset) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

func (x *RingsAsset) GetSupply_24H() string {
	if x != nil {
		return x.Supply_24H
	}
	return ""
}

func (x *RingsAsset) GetSupply_7D() string {
	if x != nil {
		return x.Supply_7D
	}
	return ""
}

func (x *RingsAsset) GetSuppliers() string {
	if x != nil {
		return x.Suppliers
	}
	return ""
}

func (x *RingsAsset) GetBorrowApy() string {
	if x != nil {
		return x.BorrowApy
	}
	return ""
}

func (x *RingsAsset) GetTotalBorrow() string {
	if x != nil {
		return x.TotalBorrow
	}
	return ""
}

func (x *RingsAsset) GetBorrow_24H() string {
	if x != nil {
		return x.Borrow_24H
	}
	return ""
}

func (x *RingsAsset) GetBorrow_7D() string {
	if x != nil {
		return x.Borrow_7D
	}
	return ""
}

func (x *RingsAsset) GetBorrowers() string {
	if x != nil {
		return x.Borrowers
	}
	return ""
}

type RingsAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats []*RingsAsset `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *RingsAssetsResponse) Reset() {
	*x = RingsAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsAssetsResponse) ProtoMessage() {}

func (x *RingsAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsAssetsResponse.ProtoReflect.Descriptor instead.
func (*RingsAssetsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{29}
}

func (x *RingsAssetsResponse) GetStats() []*RingsAsset {
	if x != nil {
		return x.Stats
	}
	return nil
}

type RingsMarketStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    RingsMarketStatisticsRequest_MarketChartType `protobuf:"varint,1,opt,name=type,proto3,enum=pandostat.v1.RingsMarketStatisticsRequest_MarketChartType" json:"type,omitempty"`
	Range   TimeRange                                    `protobuf:"varint,2,opt,name=range,proto3,enum=pandostat.v1.TimeRange" json:"range,omitempty"`
	AssetId string                                       `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *RingsMarketStatisticsRequest) Reset() {
	*x = RingsMarketStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsMarketStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsMarketStatisticsRequest) ProtoMessage() {}

func (x *RingsMarketStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsMarketStatisticsRequest.ProtoReflect.Descriptor instead.
func (*RingsMarketStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{30}
}

func (x *RingsMarketStatisticsRequest) GetType() RingsMarketStatisticsRequest_MarketChartType {
	if x != nil {
		return x.Type
	}
	return RingsMarketStatisticsRequest_TYPE_NOT_SET
}

func (x *RingsMarketStatisticsRequest) GetRange() TimeRange {
	if x != nil {
		return x.Range
	}
	return TimeRange_TIME_RANGE_NOT_SET
}

func (x *RingsMarketStatisticsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type RingsMarketStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ChartData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RingsMarketStatisticsResponse) Reset() {
	*x = RingsMarketStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsMarketStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsMarketStatisticsResponse) ProtoMessage() {}

func (x *RingsMarketStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsMarketStatisticsResponse.ProtoReflect.Descriptor instead.
func (*RingsMarketStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{31}
}

func (x *RingsMarketStatisticsResponse) GetData() []*ChartData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RingsMarketDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
}

func (x *RingsMarketDetailRequest) Reset() {
	*x = RingsMarketDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsMarketDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsMarketDetailRequest) ProtoMessage() {}

func (x *RingsMarketDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsMarketDetailRequest.ProtoReflect.Descriptor instead.
func (*RingsMarketDetailRequest) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{32}
}

func (x *RingsMarketDetailRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type RingsMarketDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price              string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Liquidity          string `protobuf:"bytes,2,opt,name=liquidity,proto3" json:"liquidity,omitempty"`
	Suppliers          string `protobuf:"bytes,3,opt,name=suppliers,proto3" json:"suppliers,omitempty"`
	Borrowers          string `protobuf:"bytes,4,opt,name=borrowers,proto3" json:"borrowers,omitempty"`
	InterestPaidPerDay string `protobuf:"bytes,5,opt,name=interest_paid_per_day,json=interestPaidPerDay,proto3" json:"interest_paid_per_day,omitempty"` // Interest Paid/Day
	CollateralFactor   string `protobuf:"bytes,6,opt,name=collateral_factor,json=collateralFactor,proto3" json:"collateral_factor,omitempty"`           // 抵押率（即每抵押 1 USD 可以获得 1 * collateral_factor的借贷额度，为0说明不可抵押）
	RtokenMinted       string `protobuf:"bytes,7,opt,name=rtoken_minted,json=rtokenMinted,proto3" json:"rtoken_minted,omitempty"`
	ExchangeRate       string `protobuf:"bytes,8,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"` //兑换率: 1 cToken = 1 * exchange_rate 原asset
	Description        string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Website            string `protobuf:"bytes,10,opt,name=website,proto3" json:"website,omitempty"`
	// interest rate model
	BaseRate       string `protobuf:"bytes,11,opt,name=base_rate,json=baseRate,proto3" json:"base_rate,omitempty"`
	Multiplier     string `protobuf:"bytes,12,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	JumpMultiplier string `protobuf:"bytes,13,opt,name=jump_multiplier,json=jumpMultiplier,proto3" json:"jump_multiplier,omitempty"`
	Kink           string `protobuf:"bytes,14,opt,name=kink,proto3" json:"kink,omitempty"`
	ReserveFactor  string `protobuf:"bytes,15,opt,name=reserve_factor,json=reserveFactor,proto3" json:"reserve_factor,omitempty"`
	// Utilization Rate
	TotalCash    string `protobuf:"bytes,16,opt,name=total_cash,json=totalCash,proto3" json:"total_cash,omitempty"`
	TotalBorrows string `protobuf:"bytes,17,opt,name=total_borrows,json=totalBorrows,proto3" json:"total_borrows,omitempty"` // 已借出的量
	Reserves     string `protobuf:"bytes,18,opt,name=reserves,proto3" json:"reserves,omitempty"`
}

func (x *RingsMarketDetailResponse) Reset() {
	*x = RingsMarketDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pandostat_v1_pandostat_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingsMarketDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingsMarketDetailResponse) ProtoMessage() {}

func (x *RingsMarketDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pandostat_v1_pandostat_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingsMarketDetailResponse.ProtoReflect.Descriptor instead.
func (*RingsMarketDetailResponse) Descriptor() ([]byte, []int) {
	return file_pandostat_v1_pandostat_proto_rawDescGZIP(), []int{33}
}

func (x *RingsMarketDetailResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetLiquidity() string {
	if x != nil {
		return x.Liquidity
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetSuppliers() string {
	if x != nil {
		return x.Suppliers
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetBorrowers() string {
	if x != nil {
		return x.Borrowers
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetInterestPaidPerDay() string {
	if x != nil {
		return x.InterestPaidPerDay
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetCollateralFactor() string {
	if x != nil {
		return x.CollateralFactor
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetRtokenMinted() string {
	if x != nil {
		return x.RtokenMinted
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetBaseRate() string {
	if x != nil {
		return x.BaseRate
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetMultiplier() string {
	if x != nil {
		return x.Multiplier
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetJumpMultiplier() string {
	if x != nil {
		return x.JumpMultiplier
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetKink() string {
	if x != nil {
		return x.Kink
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetReserveFactor() string {
	if x != nil {
		return x.ReserveFactor
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetTotalCash() string {
	if x != nil {
		return x.TotalCash
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetTotalBorrows() string {
	if x != nil {
		return x.TotalBorrows
	}
	return ""
}

func (x *RingsMarketDetailResponse) GetReserves() string {
	if x != nil {
		return x.Reserves
	}
	return ""
}

var File_pandostat_v1_pandostat_proto protoreflect.FileDescriptor

var file_pandostat_v1_pandostat_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x73, 0x22, 0x77,
	0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73,
	0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x15, 0x46, 0x73,
	0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x46, 0x73, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x65, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x65, 0x65, 0x32, 0x34, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x5f, 0x32, 0x34, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x32, 0x34, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x75,
	0x72, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x32, 0x34, 0x68, 0x22, 0x14, 0x0a, 0x12, 0x46, 0x73, 0x77,
	0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xa6, 0x01, 0x0a, 0x0a, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32,
	0x34, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x32, 0x34, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x37, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x37, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x13, 0x46, 0x73, 0x77, 0x61,
	0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x22, 0x34, 0x0a, 0x17, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x46, 0x73, 0x77, 0x61, 0x70,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x17, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a,
	0x18, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x32, 0x34, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x1b, 0x46,
	0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x46, 0x73, 0x77, 0x61, 0x70,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44,
	0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x56,
	0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x53, 0x57, 0x41, 0x50,
	0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x03, 0x22, 0x4b, 0x0a, 0x1c, 0x46, 0x73, 0x77, 0x61,
	0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb3, 0x03, 0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x74, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x62, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x32, 0x34, 0x68, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x37, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x37, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x32, 0x34, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x37, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x37, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x69,
	0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x46, 0x65, 0x65, 0x22, 0x59, 0x0a, 0x17, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73,
	0x22, 0x42, 0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0xd9, 0x02, 0x0a, 0x1c, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x6b, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65, 0x65, 0x6b, 0x41, 0x74,
	0x22, 0xba, 0x02, 0x0a, 0x1f, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x22,
	0x6c, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x46,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x45, 0x41,
	0x46, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x03, 0x22, 0x4f, 0x0a,
	0x20, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x37,
	0x0a, 0x1a, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xef, 0x02, 0x0a, 0x1b, 0x4c, 0x65, 0x61, 0x66,
	0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x32, 0x34, 0x68, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x32, 0x34, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x32, 0x34, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x32, 0x34, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x32, 0x34, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x62, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x32,
	0x34, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x32, 0x34, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x1e, 0x4c, 0x65,
	0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x12, 0x4d,
	0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x4d, 0x49, 0x4e, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x42, 0x55, 0x52,
	0x4e, 0x45, 0x44, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x1f, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4, 0x02, 0x0a, 0x0a,
	0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x5f, 0x61, 0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x70, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x32, 0x34, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x37, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x37, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77,
	0x5f, 0x61, 0x70, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x41, 0x70, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62,
	0x6f, 0x72, 0x72, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x5f, 0x32, 0x34, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f,
	0x72, 0x72, 0x6f, 0x77, 0x32, 0x34, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x72, 0x72, 0x6f,
	0x77, 0x5f, 0x37, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x72, 0x72,
	0x6f, 0x77, 0x37, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x1c, 0x52, 0x69,
	0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x49,
	0x4e, 0x47, 0x53, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x50, 0x59, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59,
	0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x49, 0x4e,
	0x47, 0x53, 0x5f, 0x42, 0x4f, 0x52, 0x52, 0x4f, 0x57, 0x5f, 0x41, 0x50, 0x59, 0x10, 0x03, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x42, 0x4f, 0x52, 0x52, 0x4f, 0x57, 0x5f,
	0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x04, 0x22, 0x4c, 0x0a, 0x1d, 0x52, 0x69, 0x6e, 0x67,
	0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73,
	0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x18, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xf2, 0x04,
	0x0a, 0x19, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x64, 0x50, 0x65, 0x72, 0x44, 0x61, 0x79, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x66, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x73, 0x68,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x73,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72, 0x72, 0x6f,
	0x77, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x6f, 0x72, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x73, 0x2a, 0x5a, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x52, 0x46, 0x5f, 0x59, 0x45,
	0x41, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x05, 0x2a, 0xbb,
	0x01, 0x0a, 0x11, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x46, 0x5f, 0x53,
	0x55, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x45, 0x41, 0x46, 0x5f,
	0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x54, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x52, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x15, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x42, 0x4f, 0x52, 0x52, 0x4f, 0x57, 0x10, 0x16,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x4c, 0x49, 0x51, 0x55, 0x49, 0x44,
	0x49, 0x54, 0x59, 0x10, 0x29, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x56,
	0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x2a, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x41, 0x4b, 0x45, 0x5f,
	0x4c, 0x49, 0x51, 0x55, 0x49, 0x44, 0x49, 0x54, 0x59, 0x10, 0x3d, 0x12, 0x0f, 0x0a, 0x0b, 0x4c,
	0x41, 0x4b, 0x45, 0x5f, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x3e, 0x32, 0xf4, 0x0b, 0x0a,
	0x10, 0x50, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x0b, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x20, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x46, 0x73, 0x77, 0x61, 0x70,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x46, 0x73,
	0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x73, 0x77, 0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x73, 0x77,
	0x61, 0x70, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x4c, 0x65, 0x61,
	0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x4c, 0x65, 0x61,
	0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70,
	0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x4c, 0x65, 0x61, 0x66,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x13, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x76, 0x0a, 0x17, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x4d, 0x69, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x52, 0x69, 0x6e, 0x67, 0x73,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x52,
	0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x11, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x73, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x6f, 0x78, 0x2d, 0x6f, 0x6e, 0x65, 0x2f, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x73, 0x74, 0x61, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pandostat_v1_pandostat_proto_rawDescOnce sync.Once
	file_pandostat_v1_pandostat_proto_rawDescData = file_pandostat_v1_pandostat_proto_rawDesc
)

func file_pandostat_v1_pandostat_proto_rawDescGZIP() []byte {
	file_pandostat_v1_pandostat_proto_rawDescOnce.Do(func() {
		file_pandostat_v1_pandostat_proto_rawDescData = protoimpl.X.CompressGZIP(file_pandostat_v1_pandostat_proto_rawDescData)
	})
	return file_pandostat_v1_pandostat_proto_rawDescData
}

var file_pandostat_v1_pandostat_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_pandostat_v1_pandostat_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_pandostat_v1_pandostat_proto_goTypes = []interface{}{
	(TimeRange)(0),         // 0: pandostat.v1.TimeRange
	(OverviewChartType)(0), // 1: pandostat.v1.OverviewChartType
	(FswapAssetStatisticsRequest_FswapAssetChartType)(0),     // 2: pandostat.v1.FswapAssetStatisticsRequest.FswapAssetChartType
	(LeafCollateralStatisticsRequest_CollateralChartType)(0), // 3: pandostat.v1.LeafCollateralStatisticsRequest.CollateralChartType
	(LeafMintTokenStatisticsRequest_MintTokenChartType)(0),   // 4: pandostat.v1.LeafMintTokenStatisticsRequest.MintTokenChartType
	(RingsMarketStatisticsRequest_MarketChartType)(0),        // 5: pandostat.v1.RingsMarketStatisticsRequest.MarketChartType
	(*ListAssetsRequest)(nil),                                // 6: pandostat.v1.ListAssetsRequest
	(*ListAssetsResponse)(nil),                               // 7: pandostat.v1.ListAssetsResponse
	(*ChartData)(nil),                                        // 8: pandostat.v1.ChartData
	(*StatisticsRequest)(nil),                                // 9: pandostat.v1.StatisticsRequest
	(*StatisticsResponse)(nil),                               // 10: pandostat.v1.StatisticsResponse
	(*FswapStatsInfoRequest)(nil),                            // 11: pandostat.v1.FswapStatsInfoRequest
	(*FswapStatsInfoResponse)(nil),                           // 12: pandostat.v1.FswapStatsInfoResponse
	(*FswapAssetsRequest)(nil),                               // 13: pandostat.v1.FswapAssetsRequest
	(*FswapAsset)(nil),                                       // 14: pandostat.v1.FswapAsset
	(*FswapAssetsResponse)(nil),                              // 15: pandostat.v1.FswapAssetsResponse
	(*FswapAssetVolumeRequest)(nil),                          // 16: pandostat.v1.FswapAssetVolumeRequest
	(*FswapAssetVolumeResponse)(nil),                         // 17: pandostat.v1.FswapAssetVolumeResponse
	(*FswapAssetDetailRequest)(nil),                          // 18: pandostat.v1.FswapAssetDetailRequest
	(*FswapAssetDetailResponse)(nil),                         // 19: pandostat.v1.FswapAssetDetailResponse
	(*FswapAssetStatisticsRequest)(nil),                      // 20: pandostat.v1.FswapAssetStatisticsRequest
	(*FswapAssetStatisticsResponse)(nil),                     // 21: pandostat.v1.FswapAssetStatisticsResponse
	(*LeafCollateralsRequest)(nil),                           // 22: pandostat.v1.LeafCollateralsRequest
	(*LeafCollateral)(nil),                                   // 23: pandostat.v1.LeafCollateral
	(*LeafCollateralsResponse)(nil),                          // 24: pandostat.v1.LeafCollateralsResponse
	(*LeafCollateralDetailRequest)(nil),                      // 25: pandostat.v1.LeafCollateralDetailRequest
	(*LeafCollateralDetailResponse)(nil),                     // 26: pandostat.v1.LeafCollateralDetailResponse
	(*LeafCollateralStatisticsRequest)(nil),                  // 27: pandostat.v1.LeafCollateralStatisticsRequest
	(*LeafCollateralStatisticsResponse)(nil),                 // 28: pandostat.v1.LeafCollateralStatisticsResponse
	(*LeafMintTokenDetailRequest)(nil),                       // 29: pandostat.v1.LeafMintTokenDetailRequest
	(*LeafMintTokenDetailResponse)(nil),                      // 30: pandostat.v1.LeafMintTokenDetailResponse
	(*LeafMintTokenStatisticsRequest)(nil),                   // 31: pandostat.v1.LeafMintTokenStatisticsRequest
	(*LeafMintTokenStatisticsResponse)(nil),                  // 32: pandostat.v1.LeafMintTokenStatisticsResponse
	(*RingsAssetsRequest)(nil),                               // 33: pandostat.v1.RingsAssetsRequest
	(*RingsAsset)(nil),                                       // 34: pandostat.v1.RingsAsset
	(*RingsAssetsResponse)(nil),                              // 35: pandostat.v1.RingsAssetsResponse
	(*RingsMarketStatisticsRequest)(nil),                     // 36: pandostat.v1.RingsMarketStatisticsRequest
	(*RingsMarketStatisticsResponse)(nil),                    // 37: pandostat.v1.RingsMarketStatisticsResponse
	(*RingsMarketDetailRequest)(nil),                         // 38: pandostat.v1.RingsMarketDetailRequest
	(*RingsMarketDetailResponse)(nil),                        // 39: pandostat.v1.RingsMarketDetailResponse
	(*v1.Asset)(nil),                                         // 40: common.v1.Asset
}
var file_pandostat_v1_pandostat_proto_depIdxs = []int32{
	40, // 0: pandostat.v1.ListAssetsRequest.assets:type_name -> common.v1.Asset
	40, // 1: pandostat.v1.ListAssetsResponse.assets:type_name -> common.v1.Asset
	1,  // 2: pandostat.v1.StatisticsRequest.type:type_name -> pandostat.v1.OverviewChartType
	0,  // 3: pandostat.v1.StatisticsRequest.range:type_name -> pandostat.v1.TimeRange
	8,  // 4: pandostat.v1.StatisticsResponse.data:type_name -> pandostat.v1.ChartData
	14, // 5: pandostat.v1.FswapAssetsResponse.assets:type_name -> pandostat.v1.FswapAsset
	8,  // 6: pandostat.v1.FswapAssetVolumeResponse.volumes:type_name -> pandostat.v1.ChartData
	2,  // 7: pandostat.v1.FswapAssetStatisticsRequest.type:type_name -> pandostat.v1.FswapAssetStatisticsRequest.FswapAssetChartType
	0,  // 8: pandostat.v1.FswapAssetStatisticsRequest.range:type_name -> pandostat.v1.TimeRange
	8,  // 9: pandostat.v1.FswapAssetStatisticsResponse.data:type_name -> pandostat.v1.ChartData
	23, // 10: pandostat.v1.LeafCollateralsResponse.collaterals:type_name -> pandostat.v1.LeafCollateral
	3,  // 11: pandostat.v1.LeafCollateralStatisticsRequest.type:type_name -> pandostat.v1.LeafCollateralStatisticsRequest.CollateralChartType
	0,  // 12: pandostat.v1.LeafCollateralStatisticsRequest.range:type_name -> pandostat.v1.TimeRange
	8,  // 13: pandostat.v1.LeafCollateralStatisticsResponse.data:type_name -> pandostat.v1.ChartData
	4,  // 14: pandostat.v1.LeafMintTokenStatisticsRequest.type:type_name -> pandostat.v1.LeafMintTokenStatisticsRequest.MintTokenChartType
	0,  // 15: pandostat.v1.LeafMintTokenStatisticsRequest.range:type_name -> pandostat.v1.TimeRange
	8,  // 16: pandostat.v1.LeafMintTokenStatisticsResponse.data:type_name -> pandostat.v1.ChartData
	34, // 17: pandostat.v1.RingsAssetsResponse.stats:type_name -> pandostat.v1.RingsAsset
	5,  // 18: pandostat.v1.RingsMarketStatisticsRequest.type:type_name -> pandostat.v1.RingsMarketStatisticsRequest.MarketChartType
	0,  // 19: pandostat.v1.RingsMarketStatisticsRequest.range:type_name -> pandostat.v1.TimeRange
	8,  // 20: pandostat.v1.RingsMarketStatisticsResponse.data:type_name -> pandostat.v1.ChartData
	6,  // 21: pandostat.v1.PandostatService.ListAssets:input_type -> pandostat.v1.ListAssetsRequest
	9,  // 22: pandostat.v1.PandostatService.Statistics:input_type -> pandostat.v1.StatisticsRequest
	11, // 23: pandostat.v1.PandostatService.FswapStatsInfo:input_type -> pandostat.v1.FswapStatsInfoRequest
	13, // 24: pandostat.v1.PandostatService.FswapAssets:input_type -> pandostat.v1.FswapAssetsRequest
	16, // 25: pandostat.v1.PandostatService.FswapAssetVolume:input_type -> pandostat.v1.FswapAssetVolumeRequest
	18, // 26: pandostat.v1.PandostatService.FswapAssetDetail:input_type -> pandostat.v1.FswapAssetDetailRequest
	20, // 27: pandostat.v1.PandostatService.FswapAssetStatistics:input_type -> pandostat.v1.FswapAssetStatisticsRequest
	22, // 28: pandostat.v1.PandostatService.LeafCollaterals:input_type -> pandostat.v1.LeafCollateralsRequest
	25, // 29: pandostat.v1.PandostatService.LeafCollateralDetail:input_type -> pandostat.v1.LeafCollateralDetailRequest
	27, // 30: pandostat.v1.PandostatService.LeafCollateralStatistics:input_type -> pandostat.v1.LeafCollateralStatisticsRequest
	29, // 31: pandostat.v1.PandostatService.LeafMintTokenDetail:input_type -> pandostat.v1.LeafMintTokenDetailRequest
	31, // 32: pandostat.v1.PandostatService.LeafMintTokenStatistics:input_type -> pandostat.v1.LeafMintTokenStatisticsRequest
	33, // 33: pandostat.v1.PandostatService.RingsAssets:input_type -> pandostat.v1.RingsAssetsRequest
	36, // 34: pandostat.v1.PandostatService.RingsMarketStatistics:input_type -> pandostat.v1.RingsMarketStatisticsRequest
	38, // 35: pandostat.v1.PandostatService.RingsMarketDetail:input_type -> pandostat.v1.RingsMarketDetailRequest
	7,  // 36: pandostat.v1.PandostatService.ListAssets:output_type -> pandostat.v1.ListAssetsResponse
	10, // 37: pandostat.v1.PandostatService.Statistics:output_type -> pandostat.v1.StatisticsResponse
	12, // 38: pandostat.v1.PandostatService.FswapStatsInfo:output_type -> pandostat.v1.FswapStatsInfoResponse
	15, // 39: pandostat.v1.PandostatService.FswapAssets:output_type -> pandostat.v1.FswapAssetsResponse
	17, // 40: pandostat.v1.PandostatService.FswapAssetVolume:output_type -> pandostat.v1.FswapAssetVolumeResponse
	19, // 41: pandostat.v1.PandostatService.FswapAssetDetail:output_type -> pandostat.v1.FswapAssetDetailResponse
	21, // 42: pandostat.v1.PandostatService.FswapAssetStatistics:output_type -> pandostat.v1.FswapAssetStatisticsResponse
	24, // 43: pandostat.v1.PandostatService.LeafCollaterals:output_type -> pandostat.v1.LeafCollateralsResponse
	26, // 44: pandostat.v1.PandostatService.LeafCollateralDetail:output_type -> pandostat.v1.LeafCollateralDetailResponse
	28, // 45: pandostat.v1.PandostatService.LeafCollateralStatistics:output_type -> pandostat.v1.LeafCollateralStatisticsResponse
	30, // 46: pandostat.v1.PandostatService.LeafMintTokenDetail:output_type -> pandostat.v1.LeafMintTokenDetailResponse
	32, // 47: pandostat.v1.PandostatService.LeafMintTokenStatistics:output_type -> pandostat.v1.LeafMintTokenStatisticsResponse
	35, // 48: pandostat.v1.PandostatService.RingsAssets:output_type -> pandostat.v1.RingsAssetsResponse
	37, // 49: pandostat.v1.PandostatService.RingsMarketStatistics:output_type -> pandostat.v1.RingsMarketStatisticsResponse
	39, // 50: pandostat.v1.PandostatService.RingsMarketDetail:output_type -> pandostat.v1.RingsMarketDetailResponse
	36, // [36:51] is the sub-list for method output_type
	21, // [21:36] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pandostat_v1_pandostat_proto_init() }
func file_pandostat_v1_pandostat_proto_init() {
	if File_pandostat_v1_pandostat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pandostat_v1_pandostat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapStatsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapStatsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FswapAssetStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafCollateralStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafMintTokenDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafMintTokenDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafMintTokenStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeafMintTokenStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsMarketStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsMarketStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsMarketDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pandostat_v1_pandostat_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingsMarketDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pandostat_v1_pandostat_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pandostat_v1_pandostat_proto_goTypes,
		DependencyIndexes: file_pandostat_v1_pandostat_proto_depIdxs,
		EnumInfos:         file_pandostat_v1_pandostat_proto_enumTypes,
		MessageInfos:      file_pandostat_v1_pandostat_proto_msgTypes,
	}.Build()
	File_pandostat_v1_pandostat_proto = out.File
	file_pandostat_v1_pandostat_proto_rawDesc = nil
	file_pandostat_v1_pandostat_proto_goTypes = nil
	file_pandostat_v1_pandostat_proto_depIdxs = nil
}
